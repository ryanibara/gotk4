// Code generated by girgen. DO NOT EDIT.

package gdkpixbuf

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk-pixbuf/gdk-pixbuf.h>
import "C"

// Loop gets whether animation should loop indefinitely when it reaches the end.
//
// The function returns the following values:
//
//    - ok: TRUE if the animation loops forever, FALSE otherwise.
//
func (animation *PixbufSimpleAnim) Loop() bool {
	var _arg0 *C.GdkPixbufSimpleAnim // out
	var _cret C.gboolean             // in

	_arg0 = (*C.GdkPixbufSimpleAnim)(unsafe.Pointer(coreglib.InternObject(animation).Native()))

	_cret = C.gdk_pixbuf_simple_anim_get_loop(_arg0)
	runtime.KeepAlive(animation)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// SetLoop sets whether animation should loop indefinitely when it reaches the
// end.
//
// The function takes the following parameters:
//
//    - loop: whether to loop the animation.
//
func (animation *PixbufSimpleAnim) SetLoop(loop bool) {
	var _arg0 *C.GdkPixbufSimpleAnim // out
	var _arg1 C.gboolean             // out

	_arg0 = (*C.GdkPixbufSimpleAnim)(unsafe.Pointer(coreglib.InternObject(animation).Native()))
	if loop {
		_arg1 = C.TRUE
	}

	C.gdk_pixbuf_simple_anim_set_loop(_arg0, _arg1)
	runtime.KeepAlive(animation)
	runtime.KeepAlive(loop)
}

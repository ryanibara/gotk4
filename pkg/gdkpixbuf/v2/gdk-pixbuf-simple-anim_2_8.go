// Code generated by girgen. DO NOT EDIT.

package gdkpixbuf

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk-pixbuf/gdk-pixbuf.h>
import "C"

// NewPixbufSimpleAnim creates a new, empty animation.
//
// The function takes the following parameters:
//
//    - width of the animation.
//    - height of the animation.
//    - rate: speed of the animation, in frames per second.
//
// The function returns the following values:
//
//    - pixbufSimpleAnim: newly allocated PixbufSimpleAnim.
//
func NewPixbufSimpleAnim(width, height int, rate float32) *PixbufSimpleAnim {
	var _arg1 C.gint                 // out
	var _arg2 C.gint                 // out
	var _arg3 C.gfloat               // out
	var _cret *C.GdkPixbufSimpleAnim // in

	_arg1 = C.gint(width)
	_arg2 = C.gint(height)
	_arg3 = C.gfloat(rate)

	_cret = C.gdk_pixbuf_simple_anim_new(_arg1, _arg2, _arg3)
	runtime.KeepAlive(width)
	runtime.KeepAlive(height)
	runtime.KeepAlive(rate)

	var _pixbufSimpleAnim *PixbufSimpleAnim // out

	_pixbufSimpleAnim = wrapPixbufSimpleAnim(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _pixbufSimpleAnim
}

// AddFrame adds a new frame to animation. The pixbuf must have the dimensions
// specified when the animation was constructed.
//
// The function takes the following parameters:
//
//    - pixbuf to add.
//
func (animation *PixbufSimpleAnim) AddFrame(pixbuf *Pixbuf) {
	var _arg0 *C.GdkPixbufSimpleAnim // out
	var _arg1 *C.GdkPixbuf           // out

	_arg0 = (*C.GdkPixbufSimpleAnim)(unsafe.Pointer(coreglib.InternObject(animation).Native()))
	_arg1 = (*C.GdkPixbuf)(unsafe.Pointer(coreglib.InternObject(pixbuf).Native()))

	C.gdk_pixbuf_simple_anim_add_frame(_arg0, _arg1)
	runtime.KeepAlive(animation)
	runtime.KeepAlive(pixbuf)
}

// Code generated by girgen. DO NOT EDIT.

package gdkpixbuf

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk-pixbuf/gdk-pixbuf.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypePixbufSimpleAnim = coreglib.Type(C.gdk_pixbuf_simple_anim_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypePixbufSimpleAnim, F: marshalPixbufSimpleAnim},
	})
}

// PixbufSimpleAnim: opaque struct representing a simple animation.
type PixbufSimpleAnim struct {
	_ [0]func() // equal guard
	PixbufAnimation
}

var (
	_ coreglib.Objector = (*PixbufSimpleAnim)(nil)
)

func wrapPixbufSimpleAnim(obj *coreglib.Object) *PixbufSimpleAnim {
	return &PixbufSimpleAnim{
		PixbufAnimation: PixbufAnimation{
			Object: obj,
		},
	}
}

func marshalPixbufSimpleAnim(p uintptr) (interface{}, error) {
	return wrapPixbufSimpleAnim(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

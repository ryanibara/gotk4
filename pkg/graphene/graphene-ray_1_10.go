// Code generated by girgen. DO NOT EDIT.

package graphene

import (
	"fmt"
)

// #include <stdlib.h>
// #include <graphene-gobject.h>
import "C"

// RayIntersectionKind: type of intersection.
type RayIntersectionKind C.gint

const (
	// RayIntersectionKindNone: no intersection.
	RayIntersectionKindNone RayIntersectionKind = iota
	// RayIntersectionKindEnter: ray is entering the intersected object.
	RayIntersectionKindEnter
	// RayIntersectionKindLeave: ray is leaving the intersected object.
	RayIntersectionKindLeave
)

// String returns the name in string for RayIntersectionKind.
func (r RayIntersectionKind) String() string {
	switch r {
	case RayIntersectionKindNone:
		return "None"
	case RayIntersectionKindEnter:
		return "Enter"
	case RayIntersectionKindLeave:
		return "Leave"
	default:
		return fmt.Sprintf("RayIntersectionKind(%d)", r)
	}
}

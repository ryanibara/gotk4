// Code generated by girgen. DO NOT EDIT.

package atk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <atk/atk.h>
// gboolean _gotk4_atk1_Hyperlink_virtual_is_selected_link(void* fnptr, AtkHyperlink* arg0) {
//   return ((gboolean (*)(AtkHyperlink*))(fnptr))(arg0);
// };
import "C"

// IsSelectedLink determines whether this AtkHyperlink is selected
//
// Deprecated: Please use ATK_STATE_FOCUSABLE for all links, and
// ATK_STATE_FOCUSED for focused links.
//
// The function returns the following values:
//
//    - ok: true if the AtkHyperlink is selected, False otherwise.
//
func (link_ *Hyperlink) IsSelectedLink() bool {
	var _arg0 *C.AtkHyperlink // out
	var _cret C.gboolean      // in

	_arg0 = (*C.AtkHyperlink)(unsafe.Pointer(coreglib.InternObject(link_).Native()))

	_cret = C.atk_hyperlink_is_selected_link(_arg0)
	runtime.KeepAlive(link_)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// isSelectedLink determines whether this AtkHyperlink is selected
//
// Deprecated: Please use ATK_STATE_FOCUSABLE for all links, and
// ATK_STATE_FOCUSED for focused links.
//
// The function returns the following values:
//
//    - ok: true if the AtkHyperlink is selected, False otherwise.
//
func (link_ *Hyperlink) isSelectedLink() bool {
	gclass := (*C.AtkHyperlinkClass)(coreglib.PeekParentClass(link_))
	fnarg := gclass.is_selected_link

	var _arg0 *C.AtkHyperlink // out
	var _cret C.gboolean      // in

	_arg0 = (*C.AtkHyperlink)(unsafe.Pointer(coreglib.InternObject(link_).Native()))

	_cret = C._gotk4_atk1_Hyperlink_virtual_is_selected_link(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(link_)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

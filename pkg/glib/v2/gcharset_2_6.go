// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"unsafe"
)

// #include <stdlib.h>
// #include <glib.h>
import "C"

// GetLanguageNames computes a list of applicable locale names, which can
// be used to e.g. construct locale-dependent filenames or search paths.
// The returned list is sorted from most desirable to least desirable and always
// contains the default locale "C".
//
// For example, if LANGUAGE=de:en_US, then the returned list is "de", "en_US",
// "en", "C".
//
// This function consults the environment variables LANGUAGE, LC_ALL,
// LC_MESSAGES and LANG to find the list of locales specified by the user.
//
// The function returns the following values:
//
//   - utf8s: NULL-terminated array of strings owned by GLib that must not be
//     modified or freed.
//
func GetLanguageNames() []string {
	var _cret **C.gchar // in

	_cret = C.g_get_language_names()

	var _utf8s []string // out

	{
		var i int
		var z *C.gchar
		for p := _cret; *p != z; p = &unsafe.Slice(p, 2)[1] {
			i++
		}

		src := unsafe.Slice(_cret, i)
		_utf8s = make([]string, i)
		for i := range src {
			_utf8s[i] = C.GoString((*C.gchar)(unsafe.Pointer(src[i])))
		}
	}

	return _utf8s
}

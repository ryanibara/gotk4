// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <glib.h>
import "C"

//export _gotk4_glib2_LogWriterFunc
func _gotk4_glib2_LogWriterFunc(arg1 C.GLogLevelFlags, arg2 *C.GLogField, arg3 C.gsize, arg4 C.gpointer) (cret C.GLogWriterOutput) {
	var fn LogWriterFunc
	{
		v := gbox.Get(uintptr(arg4))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(LogWriterFunc)
	}

	var _logLevel LogLevelFlags // out
	var _fields []LogField      // out

	_logLevel = LogLevelFlags(arg1)
	{
		src := unsafe.Slice((*C.GLogField)(arg2), arg3)
		_fields = make([]LogField, arg3)
		for i := 0; i < int(arg3); i++ {
			_fields[i] = *(*LogField)(gextras.NewStructNative(unsafe.Pointer((&src[i]))))
		}
	}

	logWriterOutput := fn(_logLevel, _fields)

	var _ LogWriterOutput

	cret = C.GLogWriterOutput(logWriterOutput)

	return cret
}

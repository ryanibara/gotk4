// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"runtime"
)

// #include <stdlib.h>
// #include <glib.h>
import "C"

// UnicharIswideCjk determines if a character is typically rendered in a
// double-width cell under legacy East Asian locales. If a character is wide
// according to g_unichar_iswide(), then it is also reported wide with this
// function, but the converse is not necessarily true. See the Unicode Standard
// Annex #11 (http://www.unicode.org/reports/tr11/) for details.
//
// If a character passes the g_unichar_iswide() test then it will also pass this
// test, but not the other way around. Note that some characters may pass both
// this test and g_unichar_iszerowidth().
//
// The function takes the following parameters:
//
//   - c: unicode character.
//
// The function returns the following values:
//
//   - ok: TRUE if the character is wide in legacy East Asian locales.
//
func UnicharIswideCjk(c uint32) bool {
	var _arg1 C.gunichar // out
	var _cret C.gboolean // in

	_arg1 = C.gunichar(c)

	_cret = C.g_unichar_iswide_cjk(_arg1)
	runtime.KeepAlive(c)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

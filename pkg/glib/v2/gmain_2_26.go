// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <glib.h>
import "C"

// SourceSetNameByID sets the name of a source using its ID.
//
// This is a convenience utility to set source names from the return value of
// g_idle_add(), g_timeout_add(), etc.
//
// It is a programmer error to attempt to set the name of a non-existent source.
//
// More specifically: source IDs can be reissued after a source has been
// destroyed and therefore it is never valid to use this function with a source
// ID which may have already been removed. An example is when scheduling an idle
// to run in another thread with g_idle_add(): the idle may already have run and
// been removed by the time this function is called on its (now invalid) source
// ID. This source ID may have been reissued, leading to the operation being
// performed against the wrong source.
//
// The function takes the following parameters:
//
//    - tag: #GSource ID.
//    - name: debug name for the source.
//
func SourceSetNameByID(tag uint, name string) {
	var _arg1 C.guint // out
	var _arg2 *C.char // out

	_arg1 = C.guint(tag)
	_arg2 = (*C.char)(unsafe.Pointer(C.CString(name)))
	defer C.free(unsafe.Pointer(_arg2))

	C.g_source_set_name_by_id(_arg1, _arg2)
	runtime.KeepAlive(tag)
	runtime.KeepAlive(name)
}

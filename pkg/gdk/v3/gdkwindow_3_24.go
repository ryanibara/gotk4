// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdk.h>
import "C"

// MoveToRect moves window to rect, aligning their anchor points.
//
// rect is relative to the top-left corner of the window that window is
// transient for. rect_anchor and window_anchor determine anchor points on rect
// and window to pin together. rect's anchor point can optionally be offset by
// rect_anchor_dx and rect_anchor_dy, which is equivalent to offsetting the
// position of window.
//
// anchor_hints determines how window will be moved if the anchor points cause
// it to move off-screen. For example, GDK_ANCHOR_FLIP_X will replace
// GDK_GRAVITY_NORTH_WEST with GDK_GRAVITY_NORTH_EAST and vice versa if window
// extends beyond the left or right edges of the monitor.
//
// Connect to the Window::moved-to-rect signal to find out how it was actually
// positioned.
//
// The function takes the following parameters:
//
//    - rect: destination Rectangle to align window with.
//    - rectAnchor: point on rect to align with window's anchor point.
//    - windowAnchor: point on window to align with rect's anchor point.
//    - anchorHints: positioning hints to use when limited on space.
//    - rectAnchorDx: horizontal offset to shift window, i.e. rect's anchor
//      point.
//    - rectAnchorDy: vertical offset to shift window, i.e. rect's anchor point.
//
func (window *Window) MoveToRect(rect *Rectangle, rectAnchor, windowAnchor Gravity, anchorHints AnchorHints, rectAnchorDx, rectAnchorDy int) {
	var _arg0 *C.GdkWindow     // out
	var _arg1 *C.GdkRectangle  // out
	var _arg2 C.GdkGravity     // out
	var _arg3 C.GdkGravity     // out
	var _arg4 C.GdkAnchorHints // out
	var _arg5 C.gint           // out
	var _arg6 C.gint           // out

	_arg0 = (*C.GdkWindow)(unsafe.Pointer(coreglib.InternObject(window).Native()))
	_arg1 = (*C.GdkRectangle)(gextras.StructNative(unsafe.Pointer(rect)))
	_arg2 = C.GdkGravity(rectAnchor)
	_arg3 = C.GdkGravity(windowAnchor)
	_arg4 = C.GdkAnchorHints(anchorHints)
	_arg5 = C.gint(rectAnchorDx)
	_arg6 = C.gint(rectAnchorDy)

	C.gdk_window_move_to_rect(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6)
	runtime.KeepAlive(window)
	runtime.KeepAlive(rect)
	runtime.KeepAlive(rectAnchor)
	runtime.KeepAlive(windowAnchor)
	runtime.KeepAlive(anchorHints)
	runtime.KeepAlive(rectAnchorDx)
	runtime.KeepAlive(rectAnchorDy)
}

// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdk.h>
import "C"

// PrimaryMonitor gets the primary monitor for screen. The primary monitor is
// considered the monitor where the “main desktop” lives. While normal
// application windows typically allow the window manager to place the windows,
// specialized desktop applications such as panels should place themselves on
// the primary monitor.
//
// If no primary monitor is configured by the user, the return value will be 0,
// defaulting to the first monitor.
//
// Deprecated: Use gdk_display_get_primary_monitor() instead.
//
// The function returns the following values:
//
//    - gint: integer index for the primary monitor, or 0 if none is configured.
//
func (screen *Screen) PrimaryMonitor() int {
	var _arg0 *C.GdkScreen // out
	var _cret C.gint       // in

	_arg0 = (*C.GdkScreen)(unsafe.Pointer(coreglib.InternObject(screen).Native()))

	_cret = C.gdk_screen_get_primary_monitor(_arg0)
	runtime.KeepAlive(screen)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

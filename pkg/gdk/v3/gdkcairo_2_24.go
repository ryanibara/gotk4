// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/cairo"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdk.h>
import "C"

// CairoSetSourceWindow sets the given window as the source pattern for cr.
//
// The pattern has an extend mode of CAIRO_EXTEND_NONE and is aligned so that
// the origin of window is x, y. The window contains all its subwindows when
// rendering.
//
// Note that the contents of window are undefined outside of the visible part of
// window, so use this function with care.
//
// The function takes the following parameters:
//
//    - cr: cairo context.
//    - window: Window.
//    - x: x coordinate of location to place upper left corner of window.
//    - y: y coordinate of location to place upper left corner of window.
//
func CairoSetSourceWindow(cr *cairo.Context, window Windower, x, y float64) {
	var _arg1 *C.cairo_t   // out
	var _arg2 *C.GdkWindow // out
	var _arg3 C.gdouble    // out
	var _arg4 C.gdouble    // out

	_arg1 = (*C.cairo_t)(unsafe.Pointer(cr.Native()))
	_arg2 = (*C.GdkWindow)(unsafe.Pointer(coreglib.InternObject(window).Native()))
	_arg3 = C.gdouble(x)
	_arg4 = C.gdouble(y)

	C.gdk_cairo_set_source_window(_arg1, _arg2, _arg3, _arg4)
	runtime.KeepAlive(cr)
	runtime.KeepAlive(window)
	runtime.KeepAlive(x)
	runtime.KeepAlive(y)
}

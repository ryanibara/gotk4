// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/cairo"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdk.h>
import "C"

// MoveRegion: move the part of window indicated by region by dy pixels in the Y
// direction and dx pixels in the X direction. The portions of region that not
// covered by the new position of region are invalidated.
//
// Child windows are not moved.
//
// The function takes the following parameters:
//
//    - region to move.
//    - dx: amount to move in the X direction.
//    - dy: amount to move in the Y direction.
//
func (window *Window) MoveRegion(region *cairo.Region, dx, dy int) {
	var _arg0 *C.GdkWindow      // out
	var _arg1 *C.cairo_region_t // out
	var _arg2 C.gint            // out
	var _arg3 C.gint            // out

	_arg0 = (*C.GdkWindow)(unsafe.Pointer(coreglib.InternObject(window).Native()))
	_arg1 = (*C.cairo_region_t)(unsafe.Pointer(region.Native()))
	_arg2 = C.gint(dx)
	_arg3 = C.gint(dy)

	C.gdk_window_move_region(_arg0, _arg1, _arg2, _arg3)
	runtime.KeepAlive(window)
	runtime.KeepAlive(region)
	runtime.KeepAlive(dx)
	runtime.KeepAlive(dy)
}

// SetUrgencyHint toggles whether a window needs the user's urgent attention.
//
// The function takes the following parameters:
//
//    - urgent: TRUE if the window is urgent.
//
func (window *Window) SetUrgencyHint(urgent bool) {
	var _arg0 *C.GdkWindow // out
	var _arg1 C.gboolean   // out

	_arg0 = (*C.GdkWindow)(unsafe.Pointer(coreglib.InternObject(window).Native()))
	if urgent {
		_arg1 = C.TRUE
	}

	C.gdk_window_set_urgency_hint(_arg0, _arg1)
	runtime.KeepAlive(window)
	runtime.KeepAlive(urgent)
}

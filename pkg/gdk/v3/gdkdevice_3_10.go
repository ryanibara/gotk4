// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdk.h>
import "C"

// PositionDouble gets the current location of device in double precision. As a
// slave device's coordinates are those of its master pointer, this function may
// not be called on devices of type GDK_DEVICE_TYPE_SLAVE, unless there is an
// ongoing grab on them. See gdk_device_grab().
//
// The function returns the following values:
//
//    - screen (optional): location to store the Screen the device is on, or
//      NULL.
//    - x (optional): location to store root window X coordinate of device, or
//      NULL.
//    - y (optional): location to store root window Y coordinate of device, or
//      NULL.
//
func (device *Device) PositionDouble() (screen *Screen, x, y float64) {
	var _arg0 *C.GdkDevice // out
	var _arg1 *C.GdkScreen // in
	var _arg2 C.gdouble    // in
	var _arg3 C.gdouble    // in

	_arg0 = (*C.GdkDevice)(unsafe.Pointer(coreglib.InternObject(device).Native()))

	C.gdk_device_get_position_double(_arg0, &_arg1, &_arg2, &_arg3)
	runtime.KeepAlive(device)

	var _screen *Screen // out
	var _x float64      // out
	var _y float64      // out

	if _arg1 != nil {
		_screen = wrapScreen(coreglib.Take(unsafe.Pointer(_arg1)))
	}
	_x = float64(_arg2)
	_y = float64(_arg3)

	return _screen, _x, _y
}

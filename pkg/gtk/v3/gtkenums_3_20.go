// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"fmt"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// GType values.
var (
	GTypePopoverConstraint = coreglib.Type(C.gtk_popover_constraint_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypePopoverConstraint, F: marshalPopoverConstraint},
	})
}

// PopoverConstraint describes constraints to positioning of popovers. More
// values may be added to this enumeration in the future.
type PopoverConstraint C.gint

const (
	// PopoverConstraintNone: don't constrain the popover position beyond what
	// is imposed by the implementation.
	PopoverConstraintNone PopoverConstraint = iota
	// PopoverConstraintWindow: constrain the popover to the boundaries of the
	// window that it is attached to.
	PopoverConstraintWindow
)

func marshalPopoverConstraint(p uintptr) (interface{}, error) {
	return PopoverConstraint(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for PopoverConstraint.
func (p PopoverConstraint) String() string {
	switch p {
	case PopoverConstraintNone:
		return "None"
	case PopoverConstraintWindow:
		return "Window"
	default:
		return fmt.Sprintf("PopoverConstraint(%d)", p)
	}
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// ShowText gets the value of the ProgressBar:show-text property. See
// gtk_progress_bar_set_show_text().
//
// The function returns the following values:
//
//    - ok: TRUE if text is shown in the progress bar.
//
func (pbar *ProgressBar) ShowText() bool {
	var _arg0 *C.GtkProgressBar // out
	var _cret C.gboolean        // in

	_arg0 = (*C.GtkProgressBar)(unsafe.Pointer(coreglib.InternObject(pbar).Native()))

	_cret = C.gtk_progress_bar_get_show_text(_arg0)
	runtime.KeepAlive(pbar)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// SetShowText sets whether the progress bar will show text next to the bar. The
// shown text is either the value of the ProgressBar:text property or, if that
// is NULL, the ProgressBar:fraction value, as a percentage.
//
// To make a progress bar that is styled and sized suitably for containing text
// (even if the actual text is blank), set ProgressBar:show-text to TRUE and
// ProgressBar:text to the empty string (not NULL).
//
// The function takes the following parameters:
//
//    - showText: whether to show text.
//
func (pbar *ProgressBar) SetShowText(showText bool) {
	var _arg0 *C.GtkProgressBar // out
	var _arg1 C.gboolean        // out

	_arg0 = (*C.GtkProgressBar)(unsafe.Pointer(coreglib.InternObject(pbar).Native()))
	if showText {
		_arg1 = C.TRUE
	}

	C.gtk_progress_bar_set_show_text(_arg0, _arg1)
	runtime.KeepAlive(pbar)
	runtime.KeepAlive(showText)
}

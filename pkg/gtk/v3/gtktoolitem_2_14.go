// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
// void _gotk4_gtk3_ToolItem_virtual_toolbar_reconfigured(void* fnptr, GtkToolItem* arg0) {
//   ((void (*)(GtkToolItem*))(fnptr))(arg0);
// };
import "C"

// ToolbarReconfigured emits the signal ToolItem::toolbar_reconfigured on
// tool_item. Toolbar and other ToolShell implementations use this function to
// notify children, when some aspect of their configuration changes.
func (toolItem *ToolItem) ToolbarReconfigured() {
	var _arg0 *C.GtkToolItem // out

	_arg0 = (*C.GtkToolItem)(unsafe.Pointer(coreglib.InternObject(toolItem).Native()))

	C.gtk_tool_item_toolbar_reconfigured(_arg0)
	runtime.KeepAlive(toolItem)
}

// toolbarReconfigured emits the signal ToolItem::toolbar_reconfigured on
// tool_item. Toolbar and other ToolShell implementations use this function to
// notify children, when some aspect of their configuration changes.
func (toolItem *ToolItem) toolbarReconfigured() {
	gclass := (*C.GtkToolItemClass)(coreglib.PeekParentClass(toolItem))
	fnarg := gclass.toolbar_reconfigured

	var _arg0 *C.GtkToolItem // out

	_arg0 = (*C.GtkToolItem)(unsafe.Pointer(coreglib.InternObject(toolItem).Native()))

	C._gotk4_gtk3_ToolItem_virtual_toolbar_reconfigured(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(toolItem)
}

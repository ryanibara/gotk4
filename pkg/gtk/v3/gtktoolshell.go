// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
// GtkIconSize _gotk4_gtk3_ToolShell_virtual_get_icon_size(void* fnptr, GtkToolShell* arg0) {
//   return ((GtkIconSize (*)(GtkToolShell*))(fnptr))(arg0);
// };
import "C"

// GType values.
var (
	GTypeToolShell = coreglib.Type(C.gtk_tool_shell_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeToolShell, F: marshalToolShell},
	})
}

// ToolShell interface allows container widgets to provide additional
// information when embedding ToolItem widgets.
//
// ToolShell wraps an interface. This means the user can get the
// underlying type by calling Cast().
type ToolShell struct {
	_ [0]func() // equal guard
	Widget
}

var (
	_ Widgetter = (*ToolShell)(nil)
)

// ToolSheller describes ToolShell's interface methods.
type ToolSheller interface {
	coreglib.Objector

	// EllipsizeMode retrieves the current ellipsize mode for the tool shell.
	EllipsizeMode() pango.EllipsizeMode
	// IconSize retrieves the icon size for the tool shell.
	IconSize() int
	// Orientation retrieves the current orientation for the tool shell.
	Orientation() Orientation
	// ReliefStyle returns the relief style of buttons on shell.
	ReliefStyle() ReliefStyle
	// Style retrieves whether the tool shell has text, icons, or both.
	Style() ToolbarStyle
	// TextAlignment retrieves the current text alignment for the tool shell.
	TextAlignment() float32
	// TextOrientation retrieves the current text orientation for the tool
	// shell.
	TextOrientation() Orientation
	// TextSizeGroup retrieves the current text size group for the tool shell.
	TextSizeGroup() *SizeGroup
	// RebuildMenu: calling this function signals the tool shell that the
	// overflow menu item for tool items have changed.
	RebuildMenu()
}

var _ ToolSheller = (*ToolShell)(nil)

func wrapToolShell(obj *coreglib.Object) *ToolShell {
	return &ToolShell{
		Widget: Widget{
			InitiallyUnowned: coreglib.InitiallyUnowned{
				Object: obj,
			},
			Object: obj,
			ImplementorIface: atk.ImplementorIface{
				Object: obj,
			},
			Buildable: Buildable{
				Object: obj,
			},
		},
	}
}

func marshalToolShell(p uintptr) (interface{}, error) {
	return wrapToolShell(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// The function returns the following values:
//
func (shell *ToolShell) iconSize() IconSize {
	gclass := (*C.GtkToolShellIface)(coreglib.PeekParentClass(shell))
	fnarg := gclass.get_icon_size

	var _arg0 *C.GtkToolShell // out
	var _cret C.GtkIconSize   // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C._gotk4_gtk3_ToolShell_virtual_get_icon_size(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(shell)

	var _iconSize IconSize // out

	_iconSize = IconSize(_cret)

	return _iconSize
}

// ToolShellIface: virtual function table for the ToolShell interface.
//
// An instance of this type is always passed by reference.
type ToolShellIface struct {
	*toolShellIface
}

// toolShellIface is the struct that's finalized.
type toolShellIface struct {
	native *C.GtkToolShellIface
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// AlwaysShowImage returns whether the button will ignore the
// Settings:gtk-button-images setting and always show the image, if available.
//
// The function returns the following values:
//
//    - ok: TRUE if the button will always show the image.
//
func (button *Button) AlwaysShowImage() bool {
	var _arg0 *C.GtkButton // out
	var _cret C.gboolean   // in

	_arg0 = (*C.GtkButton)(unsafe.Pointer(coreglib.InternObject(button).Native()))

	_cret = C.gtk_button_get_always_show_image(_arg0)
	runtime.KeepAlive(button)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// SetAlwaysShowImage: if TRUE, the button will ignore the
// Settings:gtk-button-images setting and always show the image, if available.
//
// Use this property if the button would be useless or hard to use without the
// image.
//
// The function takes the following parameters:
//
//    - alwaysShow: TRUE if the menuitem should always show the image.
//
func (button *Button) SetAlwaysShowImage(alwaysShow bool) {
	var _arg0 *C.GtkButton // out
	var _arg1 C.gboolean   // out

	_arg0 = (*C.GtkButton)(unsafe.Pointer(coreglib.InternObject(button).Native()))
	if alwaysShow {
		_arg1 = C.TRUE
	}

	C.gtk_button_set_always_show_image(_arg0, _arg1)
	runtime.KeepAlive(button)
	runtime.KeepAlive(alwaysShow)
}

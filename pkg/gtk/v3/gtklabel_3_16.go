// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// XAlign gets the Label:xalign property for label.
//
// The function returns the following values:
//
//    - gfloat: xalign property.
//
func (label *Label) XAlign() float32 {
	var _arg0 *C.GtkLabel // out
	var _cret C.gfloat    // in

	_arg0 = (*C.GtkLabel)(unsafe.Pointer(coreglib.InternObject(label).Native()))

	_cret = C.gtk_label_get_xalign(_arg0)
	runtime.KeepAlive(label)

	var _gfloat float32 // out

	_gfloat = float32(_cret)

	return _gfloat
}

// YAlign gets the Label:yalign property for label.
//
// The function returns the following values:
//
//    - gfloat: yalign property.
//
func (label *Label) YAlign() float32 {
	var _arg0 *C.GtkLabel // out
	var _cret C.gfloat    // in

	_arg0 = (*C.GtkLabel)(unsafe.Pointer(coreglib.InternObject(label).Native()))

	_cret = C.gtk_label_get_yalign(_arg0)
	runtime.KeepAlive(label)

	var _gfloat float32 // out

	_gfloat = float32(_cret)

	return _gfloat
}

// SetXAlign sets the Label:xalign property for label.
//
// The function takes the following parameters:
//
//    - xalign: new xalign value, between 0 and 1.
//
func (label *Label) SetXAlign(xalign float32) {
	var _arg0 *C.GtkLabel // out
	var _arg1 C.gfloat    // out

	_arg0 = (*C.GtkLabel)(unsafe.Pointer(coreglib.InternObject(label).Native()))
	_arg1 = C.gfloat(xalign)

	C.gtk_label_set_xalign(_arg0, _arg1)
	runtime.KeepAlive(label)
	runtime.KeepAlive(xalign)
}

// SetYAlign sets the Label:yalign property for label.
//
// The function takes the following parameters:
//
//    - yalign: new yalign value, between 0 and 1.
//
func (label *Label) SetYAlign(yalign float32) {
	var _arg0 *C.GtkLabel // out
	var _arg1 C.gfloat    // out

	_arg0 = (*C.GtkLabel)(unsafe.Pointer(coreglib.InternObject(label).Native()))
	_arg1 = C.gfloat(yalign)

	C.gtk_label_set_yalign(_arg0, _arg1)
	runtime.KeepAlive(label)
	runtime.KeepAlive(yalign)
}

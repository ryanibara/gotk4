// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// AllocatedSize retrieves the widget’s allocated size.
//
// This function returns the last values passed to
// gtk_widget_size_allocate_with_baseline(). The value differs from the size
// returned in gtk_widget_get_allocation() in that functions like
// gtk_widget_set_halign() can adjust the allocation, but not the value returned
// by this function.
//
// If a widget is not visible, its allocated size is 0.
//
// The function returns the following values:
//
//    - allocation: pointer to a Allocation to copy to.
//    - baseline (optional): pointer to an integer to copy to.
//
func (widget *Widget) AllocatedSize() (*Allocation, int) {
	var _arg0 *C.GtkWidget    // out
	var _arg1 C.GtkAllocation // in
	var _arg2 C.int           // in

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	C.gtk_widget_get_allocated_size(_arg0, &_arg1, &_arg2)
	runtime.KeepAlive(widget)

	var _allocation *Allocation // out
	var _baseline int           // out

	_allocation = (*gdk.Rectangle)(gextras.NewStructNative(unsafe.Pointer((&_arg1))))
	_baseline = int(_arg2)

	return _allocation, _baseline
}

// FocusOnClick returns whether the widget should grab focus when it is clicked
// with the mouse. See gtk_widget_set_focus_on_click().
//
// The function returns the following values:
//
//    - ok: TRUE if the widget should grab focus when it is clicked with the
//      mouse.
//
func (widget *Widget) FocusOnClick() bool {
	var _arg0 *C.GtkWidget // out
	var _cret C.gboolean   // in

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	_cret = C.gtk_widget_get_focus_on_click(_arg0)
	runtime.KeepAlive(widget)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// QueueAllocate: this function is only for use in widget implementations.
//
// Flags the widget for a rerun of the GtkWidgetClass::size_allocate function.
// Use this function instead of gtk_widget_queue_resize() when the widget's size
// request didn't change but it wants to reposition its contents.
//
// An example user of this function is gtk_widget_set_halign().
func (widget *Widget) QueueAllocate() {
	var _arg0 *C.GtkWidget // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	C.gtk_widget_queue_allocate(_arg0)
	runtime.KeepAlive(widget)
}

// SetFocusOnClick sets whether the widget should grab focus when it is clicked
// with the mouse. Making mouse clicks not grab focus is useful in places like
// toolbars where you don’t want the keyboard focus removed from the main area
// of the application.
//
// The function takes the following parameters:
//
//    - focusOnClick: whether the widget should grab focus when clicked with the
//      mouse.
//
func (widget *Widget) SetFocusOnClick(focusOnClick bool) {
	var _arg0 *C.GtkWidget // out
	var _arg1 C.gboolean   // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))
	if focusOnClick {
		_arg1 = C.TRUE
	}

	C.gtk_widget_set_focus_on_click(_arg0, _arg1)
	runtime.KeepAlive(widget)
	runtime.KeepAlive(focusOnClick)
}

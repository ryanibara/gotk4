// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gerror"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// AddUiFromResource parses a resource file containing a [UI definition][XML-UI]
// and merges it with the current contents of manager.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - resourcePath: resource path of the file to parse.
//
// The function returns the following values:
//
//    - guint: merge id for the merged UI. The merge id can be used to unmerge
//      the UI with gtk_ui_manager_remove_ui(). If an error occurred, the return
//      value is 0.
//
func (manager *UIManager) AddUiFromResource(resourcePath string) (uint, error) {
	var _arg0 *C.GtkUIManager // out
	var _arg1 *C.gchar        // out
	var _cret C.guint         // in
	var _cerr *C.GError       // in

	_arg0 = (*C.GtkUIManager)(unsafe.Pointer(coreglib.InternObject(manager).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(resourcePath)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.gtk_ui_manager_add_ui_from_resource(_arg0, _arg1, &_cerr)
	runtime.KeepAlive(manager)
	runtime.KeepAlive(resourcePath)

	var _guint uint  // out
	var _goerr error // out

	_guint = uint(_cret)
	if _cerr != nil {
		_goerr = gerror.Take(unsafe.Pointer(_cerr))
	}

	return _guint, _goerr
}

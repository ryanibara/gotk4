// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"reflect"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// GType values.
var (
	GTypeHButtonBox = coreglib.Type(C.gtk_hbutton_box_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeHButtonBox, F: marshalHButtonBox},
	})
}

// HButtonBoxOverrider contains methods that are overridable.
type HButtonBoxOverrider interface {
}

type HButtonBox struct {
	_ [0]func() // equal guard
	ButtonBox
}

var (
	_ Containerer       = (*HButtonBox)(nil)
	_ coreglib.Objector = (*HButtonBox)(nil)
)

func init() {
	coreglib.RegisterClassInfo(coreglib.ClassTypeInfo{
		GType:     GTypeHButtonBox,
		GoType:    reflect.TypeOf((*HButtonBox)(nil)),
		InitClass: initClassHButtonBox,
	})
}

func initClassHButtonBox(gclass unsafe.Pointer, goval any) {
	if goval, ok := goval.(interface{ InitHButtonBox(*HButtonBoxClass) }); ok {
		klass := (*HButtonBoxClass)(gextras.NewStructNative(gclass))
		goval.InitHButtonBox(klass)
	}
}

func wrapHButtonBox(obj *coreglib.Object) *HButtonBox {
	return &HButtonBox{
		ButtonBox: ButtonBox{
			Box: Box{
				Container: Container{
					Widget: Widget{
						InitiallyUnowned: coreglib.InitiallyUnowned{
							Object: obj,
						},
						Object: obj,
						ImplementorIface: atk.ImplementorIface{
							Object: obj,
						},
						Buildable: Buildable{
							Object: obj,
						},
					},
				},
				Object: obj,
				Orientable: Orientable{
					Object: obj,
				},
			},
		},
	}
}

func marshalHButtonBox(p uintptr) (interface{}, error) {
	return wrapHButtonBox(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewHButtonBox creates a new horizontal button box.
//
// Deprecated: Use gtk_button_box_new() with GTK_ORIENTATION_HORIZONTAL instead.
//
// The function returns the following values:
//
//    - hButtonBox: new button box Widget.
//
func NewHButtonBox() *HButtonBox {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_hbutton_box_new()

	var _hButtonBox *HButtonBox // out

	_hButtonBox = wrapHButtonBox(coreglib.Take(unsafe.Pointer(_cret)))

	return _hButtonBox
}

// HButtonBoxClass: instance of this type is always passed by reference.
type HButtonBoxClass struct {
	*hButtonBoxClass
}

// hButtonBoxClass is the struct that's finalized.
type hButtonBoxClass struct {
	native *C.GtkHButtonBoxClass
}

func (h *HButtonBoxClass) ParentClass() *ButtonBoxClass {
	valptr := &h.native.parent_class
	var v *ButtonBoxClass // out
	v = (*ButtonBoxClass)(gextras.NewStructNative(unsafe.Pointer((&*valptr))))
	return v
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
// GtkOrientation _gotk4_gtk3_ToolShell_virtual_get_orientation(void* fnptr, GtkToolShell* arg0) {
//   return ((GtkOrientation (*)(GtkToolShell*))(fnptr))(arg0);
// };
// GtkReliefStyle _gotk4_gtk3_ToolShell_virtual_get_relief_style(void* fnptr, GtkToolShell* arg0) {
//   return ((GtkReliefStyle (*)(GtkToolShell*))(fnptr))(arg0);
// };
// GtkToolbarStyle _gotk4_gtk3_ToolShell_virtual_get_style(void* fnptr, GtkToolShell* arg0) {
//   return ((GtkToolbarStyle (*)(GtkToolShell*))(fnptr))(arg0);
// };
// void _gotk4_gtk3_ToolShell_virtual_rebuild_menu(void* fnptr, GtkToolShell* arg0) {
//   ((void (*)(GtkToolShell*))(fnptr))(arg0);
// };
import "C"

// IconSize retrieves the icon size for the tool shell. Tool items must not call
// this function directly, but rely on gtk_tool_item_get_icon_size() instead.
//
// The function returns the following values:
//
//    - gint: current size (IconSize) for icons of shell.
//
func (shell *ToolShell) IconSize() int {
	var _arg0 *C.GtkToolShell // out
	var _cret C.GtkIconSize   // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C.gtk_tool_shell_get_icon_size(_arg0)
	runtime.KeepAlive(shell)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// Orientation retrieves the current orientation for the tool shell. Tool items
// must not call this function directly, but rely on
// gtk_tool_item_get_orientation() instead.
//
// The function returns the following values:
//
//    - orientation: current orientation of shell.
//
func (shell *ToolShell) Orientation() Orientation {
	var _arg0 *C.GtkToolShell  // out
	var _cret C.GtkOrientation // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C.gtk_tool_shell_get_orientation(_arg0)
	runtime.KeepAlive(shell)

	var _orientation Orientation // out

	_orientation = Orientation(_cret)

	return _orientation
}

// ReliefStyle returns the relief style of buttons on shell. Tool items must not
// call this function directly, but rely on gtk_tool_item_get_relief_style()
// instead.
//
// The function returns the following values:
//
//    - reliefStyle: relief style of buttons on shell.
//
func (shell *ToolShell) ReliefStyle() ReliefStyle {
	var _arg0 *C.GtkToolShell  // out
	var _cret C.GtkReliefStyle // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C.gtk_tool_shell_get_relief_style(_arg0)
	runtime.KeepAlive(shell)

	var _reliefStyle ReliefStyle // out

	_reliefStyle = ReliefStyle(_cret)

	return _reliefStyle
}

// Style retrieves whether the tool shell has text, icons, or both. Tool items
// must not call this function directly, but rely on
// gtk_tool_item_get_toolbar_style() instead.
//
// The function returns the following values:
//
//    - toolbarStyle: current style of shell.
//
func (shell *ToolShell) Style() ToolbarStyle {
	var _arg0 *C.GtkToolShell   // out
	var _cret C.GtkToolbarStyle // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C.gtk_tool_shell_get_style(_arg0)
	runtime.KeepAlive(shell)

	var _toolbarStyle ToolbarStyle // out

	_toolbarStyle = ToolbarStyle(_cret)

	return _toolbarStyle
}

// RebuildMenu: calling this function signals the tool shell that the overflow
// menu item for tool items have changed. If there is an overflow menu and if it
// is visible when this function it called, the menu will be rebuilt.
//
// Tool items must not call this function directly, but rely on
// gtk_tool_item_rebuild_menu() instead.
func (shell *ToolShell) RebuildMenu() {
	var _arg0 *C.GtkToolShell // out

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	C.gtk_tool_shell_rebuild_menu(_arg0)
	runtime.KeepAlive(shell)
}

// Orientation retrieves the current orientation for the tool shell. Tool items
// must not call this function directly, but rely on
// gtk_tool_item_get_orientation() instead.
//
// The function returns the following values:
//
//    - orientation: current orientation of shell.
//
func (shell *ToolShell) orientation() Orientation {
	gclass := (*C.GtkToolShellIface)(coreglib.PeekParentClass(shell))
	fnarg := gclass.get_orientation

	var _arg0 *C.GtkToolShell  // out
	var _cret C.GtkOrientation // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C._gotk4_gtk3_ToolShell_virtual_get_orientation(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(shell)

	var _orientation Orientation // out

	_orientation = Orientation(_cret)

	return _orientation
}

// reliefStyle returns the relief style of buttons on shell. Tool items must not
// call this function directly, but rely on gtk_tool_item_get_relief_style()
// instead.
//
// The function returns the following values:
//
//    - reliefStyle: relief style of buttons on shell.
//
func (shell *ToolShell) reliefStyle() ReliefStyle {
	gclass := (*C.GtkToolShellIface)(coreglib.PeekParentClass(shell))
	fnarg := gclass.get_relief_style

	var _arg0 *C.GtkToolShell  // out
	var _cret C.GtkReliefStyle // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C._gotk4_gtk3_ToolShell_virtual_get_relief_style(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(shell)

	var _reliefStyle ReliefStyle // out

	_reliefStyle = ReliefStyle(_cret)

	return _reliefStyle
}

// Style retrieves whether the tool shell has text, icons, or both. Tool items
// must not call this function directly, but rely on
// gtk_tool_item_get_toolbar_style() instead.
//
// The function returns the following values:
//
//    - toolbarStyle: current style of shell.
//
func (shell *ToolShell) style() ToolbarStyle {
	gclass := (*C.GtkToolShellIface)(coreglib.PeekParentClass(shell))
	fnarg := gclass.get_style

	var _arg0 *C.GtkToolShell   // out
	var _cret C.GtkToolbarStyle // in

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	_cret = C._gotk4_gtk3_ToolShell_virtual_get_style(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(shell)

	var _toolbarStyle ToolbarStyle // out

	_toolbarStyle = ToolbarStyle(_cret)

	return _toolbarStyle
}

// rebuildMenu: calling this function signals the tool shell that the overflow
// menu item for tool items have changed. If there is an overflow menu and if it
// is visible when this function it called, the menu will be rebuilt.
//
// Tool items must not call this function directly, but rely on
// gtk_tool_item_rebuild_menu() instead.
func (shell *ToolShell) rebuildMenu() {
	gclass := (*C.GtkToolShellIface)(coreglib.PeekParentClass(shell))
	fnarg := gclass.rebuild_menu

	var _arg0 *C.GtkToolShell // out

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(coreglib.InternObject(shell).Native()))

	C._gotk4_gtk3_ToolShell_virtual_rebuild_menu(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(shell)
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// Clip retrieves the widget’s clip area.
//
// The clip area is the area in which all of widget's drawing will happen. Other
// toolkits call it the bounding box.
//
// Historically, in GTK+ the clip area has been equal to the allocation
// retrieved via gtk_widget_get_allocation().
//
// The function returns the following values:
//
//    - clip: pointer to a Allocation to copy to.
//
func (widget *Widget) Clip() *Allocation {
	var _arg0 *C.GtkWidget    // out
	var _arg1 C.GtkAllocation // in

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	C.gtk_widget_get_clip(_arg0, &_arg1)
	runtime.KeepAlive(widget)

	var _clip *Allocation // out

	_clip = (*gdk.Rectangle)(gextras.NewStructNative(unsafe.Pointer((&_arg1))))

	return _clip
}

// SetClip sets the widget’s clip. This must not be used directly, but from
// within a widget’s size_allocate method. It must be called after
// gtk_widget_set_allocation() (or after chaining up to the parent class),
// because that function resets the clip.
//
// The clip set should be the area that widget draws on. If widget is a
// Container, the area must contain all children's clips.
//
// If this function is not called by widget during a ::size-allocate handler,
// the clip will be set to widget's allocation.
//
// The function takes the following parameters:
//
//    - clip: pointer to a Allocation to copy from.
//
func (widget *Widget) SetClip(clip *Allocation) {
	var _arg0 *C.GtkWidget     // out
	var _arg1 *C.GtkAllocation // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))
	_arg1 = (*C.GdkRectangle)(gextras.StructNative(unsafe.Pointer(clip)))

	C.gtk_widget_set_clip(_arg0, _arg1)
	runtime.KeepAlive(widget)
	runtime.KeepAlive(clip)
}

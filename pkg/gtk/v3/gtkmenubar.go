// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"reflect"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// GType values.
var (
	GTypeMenuBar = coreglib.Type(C.gtk_menu_bar_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeMenuBar, F: marshalMenuBar},
	})
}

// MenuBarOverrides contains methods that are overridable.
type MenuBarOverrides struct {
}

func defaultMenuBarOverrides(v *MenuBar) MenuBarOverrides {
	return MenuBarOverrides{}
}

// MenuBar is a subclass of MenuShell which contains one or more MenuItems. The
// result is a standard menu bar which can hold many menu items.
//
//
// CSS nodes
//
// GtkMenuBar has a single CSS node with name menubar.
type MenuBar struct {
	_ [0]func() // equal guard
	MenuShell
}

var (
	_ MenuSheller = (*MenuBar)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*MenuBar, *MenuBarClass, MenuBarOverrides](
		GTypeMenuBar,
		initMenuBarClass,
		wrapMenuBar,
		defaultMenuBarOverrides,
	)
}

func initMenuBarClass(gclass unsafe.Pointer, overrides MenuBarOverrides, classInitFunc func(*MenuBarClass)) {
	if classInitFunc != nil {
		class := (*MenuBarClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapMenuBar(obj *coreglib.Object) *MenuBar {
	return &MenuBar{
		MenuShell: MenuShell{
			Container: Container{
				Widget: Widget{
					InitiallyUnowned: coreglib.InitiallyUnowned{
						Object: obj,
					},
					Object: obj,
					ImplementorIface: atk.ImplementorIface{
						Object: obj,
					},
					Buildable: Buildable{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalMenuBar(p uintptr) (interface{}, error) {
	return wrapMenuBar(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewMenuBar creates a new MenuBar.
//
// The function returns the following values:
//
//    - menuBar: new menu bar, as a Widget.
//
func NewMenuBar() *MenuBar {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_menu_bar_new()

	var _menuBar *MenuBar // out

	_menuBar = wrapMenuBar(coreglib.Take(unsafe.Pointer(_cret)))

	return _menuBar
}

// MenuBarClass: instance of this type is always passed by reference.
type MenuBarClass struct {
	*menuBarClass
}

// menuBarClass is the struct that's finalized.
type menuBarClass struct {
	native *C.GtkMenuBarClass
}

func (m *MenuBarClass) ParentClass() *MenuShellClass {
	valptr := &m.native.parent_class
	var _v *MenuShellClass // out
	_v = (*MenuShellClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}

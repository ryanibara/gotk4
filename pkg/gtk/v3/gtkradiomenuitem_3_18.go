// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// JoinGroup joins a RadioMenuItem object to the group of another RadioMenuItem
// object.
//
// This function should be used by language bindings to avoid the memory
// manangement of the opaque List of gtk_radio_menu_item_get_group() and
// gtk_radio_menu_item_set_group().
//
// A common way to set up a group of RadioMenuItem instances is:
//
//      GtkRadioMenuItem *last_item = NULL;
//
//      while ( ...more items to add... )
//        {
//          GtkRadioMenuItem *radio_item;
//
//          radio_item = gtk_radio_menu_item_new (...);
//
//          gtk_radio_menu_item_join_group (radio_item, last_item);
//          last_item = radio_item;
//        }.
//
// The function takes the following parameters:
//
//    - groupSource (optional) whose group we are joining, or NULL to remove the
//      radio_menu_item from its current group.
//
func (radioMenuItem *RadioMenuItem) JoinGroup(groupSource *RadioMenuItem) {
	var _arg0 *C.GtkRadioMenuItem // out
	var _arg1 *C.GtkRadioMenuItem // out

	_arg0 = (*C.GtkRadioMenuItem)(unsafe.Pointer(coreglib.InternObject(radioMenuItem).Native()))
	if groupSource != nil {
		_arg1 = (*C.GtkRadioMenuItem)(unsafe.Pointer(coreglib.InternObject(groupSource).Native()))
	}

	C.gtk_radio_menu_item_join_group(_arg0, _arg1)
	runtime.KeepAlive(radioMenuItem)
	runtime.KeepAlive(groupSource)
}

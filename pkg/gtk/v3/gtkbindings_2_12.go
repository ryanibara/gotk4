// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// BindingEntrySkip: install a binding on binding_set which causes key lookups
// to be aborted, to prevent bindings from lower priority sets to be activated.
//
// The function takes the following parameters:
//
//   - bindingSet to skip an entry of.
//   - keyval: key value of binding to skip.
//   - modifiers: key modifier of binding to skip.
//
func BindingEntrySkip(bindingSet *BindingSet, keyval uint, modifiers gdk.ModifierType) {
	var _arg1 *C.GtkBindingSet  // out
	var _arg2 C.guint           // out
	var _arg3 C.GdkModifierType // out

	_arg1 = (*C.GtkBindingSet)(gextras.StructNative(unsafe.Pointer(bindingSet)))
	_arg2 = C.guint(keyval)
	_arg3 = C.GdkModifierType(modifiers)

	C.gtk_binding_entry_skip(_arg1, _arg2, _arg3)
	runtime.KeepAlive(bindingSet)
	runtime.KeepAlive(keyval)
	runtime.KeepAlive(modifiers)
}

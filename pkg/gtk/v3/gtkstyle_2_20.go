// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// HasRCStyle determines if the widget style has been looked up through the rc
// mechanism.
//
// Deprecated: Use StyleContext instead.
//
// The function returns the following values:
//
//    - ok: TRUE if the widget has been looked up through the rc mechanism, FALSE
//      otherwise.
//
func (widget *Widget) HasRCStyle() bool {
	var _arg0 *C.GtkWidget // out
	var _cret C.gboolean   // in

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	_cret = C.gtk_widget_has_rc_style(_arg0)
	runtime.KeepAlive(widget)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// StyleAttach: this function attaches the widget’s Style to the widget's
// Window. It is a replacement for
//
//    widget->style = gtk_style_attach (widget->style, widget->window);
//
// and should only ever be called in a derived widget’s “realize” implementation
// which does not chain up to its parent class' “realize” implementation,
// because one of the parent classes (finally Widget) would attach the style
// itself.
//
// Deprecated: This step is unnecessary with StyleContext.
func (widget *Widget) StyleAttach() {
	var _arg0 *C.GtkWidget // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	C.gtk_widget_style_attach(_arg0)
	runtime.KeepAlive(widget)
}

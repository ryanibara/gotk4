// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// GType values.
var (
	GTypeVSeparator = coreglib.Type(C.gtk_vseparator_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeVSeparator, F: marshalVSeparator},
	})
}

// VSeparatorOverrides contains methods that are overridable.
type VSeparatorOverrides struct {
}

func defaultVSeparatorOverrides(v *VSeparator) VSeparatorOverrides {
	return VSeparatorOverrides{}
}

// VSeparator widget is a vertical separator, used to group the widgets within a
// window. It displays a vertical line with a shadow to make it appear sunken
// into the interface.
//
// GtkVSeparator has been deprecated, use Separator instead.
type VSeparator struct {
	_ [0]func() // equal guard
	Separator
}

var (
	_ Widgetter         = (*VSeparator)(nil)
	_ coreglib.Objector = (*VSeparator)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*VSeparator, *VSeparatorClass, VSeparatorOverrides](
		GTypeVSeparator,
		initVSeparatorClass,
		wrapVSeparator,
		defaultVSeparatorOverrides,
	)
}

func initVSeparatorClass(gclass unsafe.Pointer, overrides VSeparatorOverrides, classInitFunc func(*VSeparatorClass)) {
	if classInitFunc != nil {
		class := (*VSeparatorClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapVSeparator(obj *coreglib.Object) *VSeparator {
	return &VSeparator{
		Separator: Separator{
			Widget: Widget{
				InitiallyUnowned: coreglib.InitiallyUnowned{
					Object: obj,
				},
				Object: obj,
				ImplementorIface: atk.ImplementorIface{
					Object: obj,
				},
				Buildable: Buildable{
					Object: obj,
				},
			},
			Object: obj,
			Orientable: Orientable{
				Object: obj,
			},
		},
	}
}

func marshalVSeparator(p uintptr) (interface{}, error) {
	return wrapVSeparator(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewVSeparator creates a new VSeparator.
//
// Deprecated: Use gtk_separator_new() with GTK_ORIENTATION_VERTICAL instead.
//
// The function returns the following values:
//
//    - vSeparator: new VSeparator.
//
func NewVSeparator() *VSeparator {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_vseparator_new()

	var _vSeparator *VSeparator // out

	_vSeparator = wrapVSeparator(coreglib.Take(unsafe.Pointer(_cret)))

	return _vSeparator
}

// VSeparatorClass: instance of this type is always passed by reference.
type VSeparatorClass struct {
	*vSeparatorClass
}

// vSeparatorClass is the struct that's finalized.
type vSeparatorClass struct {
	native *C.GtkVSeparatorClass
}

func (v *VSeparatorClass) ParentClass() *SeparatorClass {
	valptr := &v.native.parent_class
	var _v *SeparatorClass // out
	_v = (*SeparatorClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}

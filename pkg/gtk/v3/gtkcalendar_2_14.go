// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
// extern void callbackDelete(gpointer);
// extern gchar* _gotk4_gtk3_CalendarDetailFunc(GtkCalendar*, guint, guint, guint, gpointer);
import "C"

// CalendarDetailFunc: this kind of functions provide Pango markup with detail
// information for the specified day. Examples for such details are holidays or
// appointments. The function returns NULL when no information is available.
type CalendarDetailFunc func(calendar *Calendar, year, month, day uint) (utf8 string)

// DetailHeightRows queries the height of detail cells, in rows. See
// Calendar:detail-width-chars.
//
// The function returns the following values:
//
//    - gint: height of detail cells, in rows.
//
func (calendar *Calendar) DetailHeightRows() int {
	var _arg0 *C.GtkCalendar // out
	var _cret C.gint         // in

	_arg0 = (*C.GtkCalendar)(unsafe.Pointer(coreglib.InternObject(calendar).Native()))

	_cret = C.gtk_calendar_get_detail_height_rows(_arg0)
	runtime.KeepAlive(calendar)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// DetailWidthChars queries the width of detail cells, in characters. See
// Calendar:detail-width-chars.
//
// The function returns the following values:
//
//    - gint: width of detail cells, in characters.
//
func (calendar *Calendar) DetailWidthChars() int {
	var _arg0 *C.GtkCalendar // out
	var _cret C.gint         // in

	_arg0 = (*C.GtkCalendar)(unsafe.Pointer(coreglib.InternObject(calendar).Native()))

	_cret = C.gtk_calendar_get_detail_width_chars(_arg0)
	runtime.KeepAlive(calendar)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// SetDetailFunc installs a function which provides Pango markup with detail
// information for each day. Examples for such details are holidays or
// appointments. That information is shown below each day when
// Calendar:show-details is set. A tooltip containing with full detail
// information is provided, if the entire text should not fit into the details
// area, or if Calendar:show-details is not set.
//
// The size of the details area can be restricted by setting the
// Calendar:detail-width-chars and Calendar:detail-height-rows properties.
//
// The function takes the following parameters:
//
//    - fn: function providing details for each day.
//
func (calendar *Calendar) SetDetailFunc(fn CalendarDetailFunc) {
	var _arg0 *C.GtkCalendar          // out
	var _arg1 C.GtkCalendarDetailFunc // out
	var _arg2 C.gpointer
	var _arg3 C.GDestroyNotify

	_arg0 = (*C.GtkCalendar)(unsafe.Pointer(coreglib.InternObject(calendar).Native()))
	_arg1 = (*[0]byte)(C._gotk4_gtk3_CalendarDetailFunc)
	_arg2 = C.gpointer(gbox.Assign(fn))
	_arg3 = (C.GDestroyNotify)((*[0]byte)(C.callbackDelete))

	C.gtk_calendar_set_detail_func(_arg0, _arg1, _arg2, _arg3)
	runtime.KeepAlive(calendar)
	runtime.KeepAlive(fn)
}

// SetDetailHeightRows updates the height of detail cells. See
// Calendar:detail-height-rows.
//
// The function takes the following parameters:
//
//    - rows: detail height in rows.
//
func (calendar *Calendar) SetDetailHeightRows(rows int) {
	var _arg0 *C.GtkCalendar // out
	var _arg1 C.gint         // out

	_arg0 = (*C.GtkCalendar)(unsafe.Pointer(coreglib.InternObject(calendar).Native()))
	_arg1 = C.gint(rows)

	C.gtk_calendar_set_detail_height_rows(_arg0, _arg1)
	runtime.KeepAlive(calendar)
	runtime.KeepAlive(rows)
}

// SetDetailWidthChars updates the width of detail cells. See
// Calendar:detail-width-chars.
//
// The function takes the following parameters:
//
//    - chars: detail width in characters.
//
func (calendar *Calendar) SetDetailWidthChars(chars int) {
	var _arg0 *C.GtkCalendar // out
	var _arg1 C.gint         // out

	_arg0 = (*C.GtkCalendar)(unsafe.Pointer(coreglib.InternObject(calendar).Native()))
	_arg1 = C.gint(chars)

	C.gtk_calendar_set_detail_width_chars(_arg0, _arg1)
	runtime.KeepAlive(calendar)
	runtime.KeepAlive(chars)
}

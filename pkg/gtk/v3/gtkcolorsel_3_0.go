// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// CurrentRGBA sets rgba to be the current color in the GtkColorSelection
// widget.
//
// The function returns the following values:
//
//    - rgba to fill in with the current color.
//
func (colorsel *ColorSelection) CurrentRGBA() *gdk.RGBA {
	var _arg0 *C.GtkColorSelection // out
	var _arg1 C.GdkRGBA            // in

	_arg0 = (*C.GtkColorSelection)(unsafe.Pointer(coreglib.InternObject(colorsel).Native()))

	C.gtk_color_selection_get_current_rgba(_arg0, &_arg1)
	runtime.KeepAlive(colorsel)

	var _rgba *gdk.RGBA // out

	_rgba = (*gdk.RGBA)(gextras.NewStructNative(unsafe.Pointer((&_arg1))))

	return _rgba
}

// PreviousRGBA fills rgba in with the original color value.
//
// The function returns the following values:
//
//    - rgba to fill in with the original color value.
//
func (colorsel *ColorSelection) PreviousRGBA() *gdk.RGBA {
	var _arg0 *C.GtkColorSelection // out
	var _arg1 C.GdkRGBA            // in

	_arg0 = (*C.GtkColorSelection)(unsafe.Pointer(coreglib.InternObject(colorsel).Native()))

	C.gtk_color_selection_get_previous_rgba(_arg0, &_arg1)
	runtime.KeepAlive(colorsel)

	var _rgba *gdk.RGBA // out

	_rgba = (*gdk.RGBA)(gextras.NewStructNative(unsafe.Pointer((&_arg1))))

	return _rgba
}

// SetCurrentRGBA sets the current color to be rgba.
//
// The first time this is called, it will also set the original color to be rgba
// too.
//
// The function takes the following parameters:
//
//    - rgba to set the current color with.
//
func (colorsel *ColorSelection) SetCurrentRGBA(rgba *gdk.RGBA) {
	var _arg0 *C.GtkColorSelection // out
	var _arg1 *C.GdkRGBA           // out

	_arg0 = (*C.GtkColorSelection)(unsafe.Pointer(coreglib.InternObject(colorsel).Native()))
	_arg1 = (*C.GdkRGBA)(gextras.StructNative(unsafe.Pointer(rgba)))

	C.gtk_color_selection_set_current_rgba(_arg0, _arg1)
	runtime.KeepAlive(colorsel)
	runtime.KeepAlive(rgba)
}

// SetPreviousRGBA sets the “previous” color to be rgba.
//
// This function should be called with some hesitations, as it might seem
// confusing to have that color change. Calling
// gtk_color_selection_set_current_rgba() will also set this color the first
// time it is called.
//
// The function takes the following parameters:
//
//    - rgba to set the previous color with.
//
func (colorsel *ColorSelection) SetPreviousRGBA(rgba *gdk.RGBA) {
	var _arg0 *C.GtkColorSelection // out
	var _arg1 *C.GdkRGBA           // out

	_arg0 = (*C.GtkColorSelection)(unsafe.Pointer(coreglib.InternObject(colorsel).Native()))
	_arg1 = (*C.GdkRGBA)(gextras.StructNative(unsafe.Pointer(rgba)))

	C.gtk_color_selection_set_previous_rgba(_arg0, _arg1)
	runtime.KeepAlive(colorsel)
	runtime.KeepAlive(rgba)
}

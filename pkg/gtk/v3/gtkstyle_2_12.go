// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// ModifyCursor sets the cursor color to use in a widget, overriding the Widget
// cursor-color and secondary-cursor-color style properties.
//
// All other style values are left untouched. See also
// gtk_widget_modify_style().
//
// Deprecated: Use gtk_widget_override_cursor() instead.
//
// The function takes the following parameters:
//
//    - primary (optional): color to use for primary cursor (does not need to be
//      allocated), or NULL to undo the effect of previous calls to of
//      gtk_widget_modify_cursor().
//    - secondary (optional): color to use for secondary cursor (does not need to
//      be allocated), or NULL to undo the effect of previous calls to of
//      gtk_widget_modify_cursor().
//
func (widget *Widget) ModifyCursor(primary, secondary *gdk.Color) {
	var _arg0 *C.GtkWidget // out
	var _arg1 *C.GdkColor  // out
	var _arg2 *C.GdkColor  // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))
	if primary != nil {
		_arg1 = (*C.GdkColor)(gextras.StructNative(unsafe.Pointer(primary)))
	}
	if secondary != nil {
		_arg2 = (*C.GdkColor)(gextras.StructNative(unsafe.Pointer(secondary)))
	}

	C.gtk_widget_modify_cursor(_arg0, _arg1, _arg2)
	runtime.KeepAlive(widget)
	runtime.KeepAlive(primary)
	runtime.KeepAlive(secondary)
}

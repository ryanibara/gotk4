// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// AlwaysShowImage returns whether the menu item will ignore the
// Settings:gtk-menu-images setting and always show the image, if available.
//
// Deprecated: since version 3.10.
//
// The function returns the following values:
//
//    - ok: TRUE if the menu item will always show the image.
//
func (imageMenuItem *ImageMenuItem) AlwaysShowImage() bool {
	var _arg0 *C.GtkImageMenuItem // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GtkImageMenuItem)(unsafe.Pointer(coreglib.InternObject(imageMenuItem).Native()))

	_cret = C.gtk_image_menu_item_get_always_show_image(_arg0)
	runtime.KeepAlive(imageMenuItem)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// UseStock checks whether the label set in the menuitem is used as a stock id
// to select the stock item for the item.
//
// Deprecated: since version 3.10.
//
// The function returns the following values:
//
//    - ok: TRUE if the label set in the menuitem is used as a stock id to select
//      the stock item for the item.
//
func (imageMenuItem *ImageMenuItem) UseStock() bool {
	var _arg0 *C.GtkImageMenuItem // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GtkImageMenuItem)(unsafe.Pointer(coreglib.InternObject(imageMenuItem).Native()))

	_cret = C.gtk_image_menu_item_get_use_stock(_arg0)
	runtime.KeepAlive(imageMenuItem)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// SetAccelGroup specifies an accel_group to add the menu items accelerator to
// (this only applies to stock items so a stock item must already be set, make
// sure to call gtk_image_menu_item_set_use_stock() and
// gtk_menu_item_set_label() with a valid stock item first).
//
// If you want this menu item to have changeable accelerators then you shouldnt
// need this (see gtk_image_menu_item_new_from_stock()).
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - accelGroup: AccelGroup.
//
func (imageMenuItem *ImageMenuItem) SetAccelGroup(accelGroup *AccelGroup) {
	var _arg0 *C.GtkImageMenuItem // out
	var _arg1 *C.GtkAccelGroup    // out

	_arg0 = (*C.GtkImageMenuItem)(unsafe.Pointer(coreglib.InternObject(imageMenuItem).Native()))
	_arg1 = (*C.GtkAccelGroup)(unsafe.Pointer(coreglib.InternObject(accelGroup).Native()))

	C.gtk_image_menu_item_set_accel_group(_arg0, _arg1)
	runtime.KeepAlive(imageMenuItem)
	runtime.KeepAlive(accelGroup)
}

// SetAlwaysShowImage: if TRUE, the menu item will ignore the
// Settings:gtk-menu-images setting and always show the image, if available.
//
// Use this property if the menuitem would be useless or hard to use without the
// image.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - alwaysShow: TRUE if the menuitem should always show the image.
//
func (imageMenuItem *ImageMenuItem) SetAlwaysShowImage(alwaysShow bool) {
	var _arg0 *C.GtkImageMenuItem // out
	var _arg1 C.gboolean          // out

	_arg0 = (*C.GtkImageMenuItem)(unsafe.Pointer(coreglib.InternObject(imageMenuItem).Native()))
	if alwaysShow {
		_arg1 = C.TRUE
	}

	C.gtk_image_menu_item_set_always_show_image(_arg0, _arg1)
	runtime.KeepAlive(imageMenuItem)
	runtime.KeepAlive(alwaysShow)
}

// SetUseStock: if TRUE, the label set in the menuitem is used as a stock id to
// select the stock item for the item.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - useStock: TRUE if the menuitem should use a stock item.
//
func (imageMenuItem *ImageMenuItem) SetUseStock(useStock bool) {
	var _arg0 *C.GtkImageMenuItem // out
	var _arg1 C.gboolean          // out

	_arg0 = (*C.GtkImageMenuItem)(unsafe.Pointer(coreglib.InternObject(imageMenuItem).Native()))
	if useStock {
		_arg1 = C.TRUE
	}

	C.gtk_image_menu_item_set_use_stock(_arg0, _arg1)
	runtime.KeepAlive(imageMenuItem)
	runtime.KeepAlive(useStock)
}

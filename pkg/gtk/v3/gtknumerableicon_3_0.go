// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// NewNumerableIcon creates a new unthemed NumerableIcon.
//
// Deprecated: since version 3.14.
//
// The function takes the following parameters:
//
//   - baseIcon to overlay on.
//
// The function returns the following values:
//
//   - icon: new #GIcon.
//
func NewNumerableIcon(baseIcon gio.Iconner) *gio.Icon {
	var _arg1 *C.GIcon // out
	var _cret *C.GIcon // in

	_arg1 = (*C.GIcon)(unsafe.Pointer(coreglib.InternObject(baseIcon).Native()))

	_cret = C.gtk_numerable_icon_new(_arg1)
	runtime.KeepAlive(baseIcon)

	var _icon *gio.Icon // out

	{
		obj := coreglib.AssumeOwnership(unsafe.Pointer(_cret))
		_icon = &gio.Icon{
			Object: obj,
		}
	}

	return _icon
}

// NewNumerableIconWithStyleContext creates a new NumerableIcon which will
// themed according to the passed StyleContext. This is a convenience
// constructor that calls gtk_numerable_icon_set_style_context() internally.
//
// Deprecated: since version 3.14.
//
// The function takes the following parameters:
//
//   - baseIcon to overlay on.
//   - context: StyleContext.
//
// The function returns the following values:
//
//   - icon: new #GIcon.
//
func NewNumerableIconWithStyleContext(baseIcon gio.Iconner, context *StyleContext) *gio.Icon {
	var _arg1 *C.GIcon           // out
	var _arg2 *C.GtkStyleContext // out
	var _cret *C.GIcon           // in

	_arg1 = (*C.GIcon)(unsafe.Pointer(coreglib.InternObject(baseIcon).Native()))
	_arg2 = (*C.GtkStyleContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.gtk_numerable_icon_new_with_style_context(_arg1, _arg2)
	runtime.KeepAlive(baseIcon)
	runtime.KeepAlive(context)

	var _icon *gio.Icon // out

	{
		obj := coreglib.AssumeOwnership(unsafe.Pointer(_cret))
		_icon = &gio.Icon{
			Object: obj,
		}
	}

	return _icon
}

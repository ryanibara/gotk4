// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// SetAccel: manually sets a keyval and modifier mask as the accelerator
// rendered by accel_label.
//
// If a keyval and modifier are explicitly set then these values are used
// regardless of any associated accel closure or widget.
//
// Providing an accelerator_key of 0 removes the manual setting.
//
// The function takes the following parameters:
//
//    - acceleratorKey: keyval, or 0.
//    - acceleratorMods: modifier mask for the accel.
//
func (accelLabel *AccelLabel) SetAccel(acceleratorKey uint, acceleratorMods gdk.ModifierType) {
	var _arg0 *C.GtkAccelLabel  // out
	var _arg1 C.guint           // out
	var _arg2 C.GdkModifierType // out

	_arg0 = (*C.GtkAccelLabel)(unsafe.Pointer(coreglib.InternObject(accelLabel).Native()))
	_arg1 = C.guint(acceleratorKey)
	_arg2 = C.GdkModifierType(acceleratorMods)

	C.gtk_accel_label_set_accel(_arg0, _arg1, _arg2)
	runtime.KeepAlive(accelLabel)
	runtime.KeepAlive(acceleratorKey)
	runtime.KeepAlive(acceleratorMods)
}

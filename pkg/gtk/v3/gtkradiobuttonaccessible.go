// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// glib.Type values for gtkradiobuttonaccessible.go.
var GTypeRadioButtonAccessible = externglib.Type(C.gtk_radio_button_accessible_get_type())

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: GTypeRadioButtonAccessible, F: marshalRadioButtonAccessible},
	})
}

// RadioButtonAccessibleOverrider contains methods that are overridable.
type RadioButtonAccessibleOverrider interface {
	externglib.Objector
}

// WrapRadioButtonAccessibleOverrider wraps the RadioButtonAccessibleOverrider
// interface implementation to access the instance methods.
func WrapRadioButtonAccessibleOverrider(obj RadioButtonAccessibleOverrider) *RadioButtonAccessible {
	return wrapRadioButtonAccessible(externglib.BaseObject(obj))
}

type RadioButtonAccessible struct {
	_ [0]func() // equal guard
	ToggleButtonAccessible
}

var (
	_ externglib.Objector = (*RadioButtonAccessible)(nil)
)

func classInitRadioButtonAccessibler(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapRadioButtonAccessible(obj *externglib.Object) *RadioButtonAccessible {
	return &RadioButtonAccessible{
		ToggleButtonAccessible: ToggleButtonAccessible{
			ButtonAccessible: ButtonAccessible{
				ContainerAccessible: ContainerAccessible{
					WidgetAccessible: WidgetAccessible{
						Accessible: Accessible{
							ObjectClass: atk.ObjectClass{
								Object: obj,
							},
						},
						Component: atk.Component{
							Object: obj,
						},
					},
				},
				Object: obj,
				Action: atk.Action{
					Object: obj,
				},
				Image: atk.Image{
					Object: obj,
				},
			},
		},
	}
}

func marshalRadioButtonAccessible(p uintptr) (interface{}, error) {
	return wrapRadioButtonAccessible(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

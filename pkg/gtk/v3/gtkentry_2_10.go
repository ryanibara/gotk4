// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// InnerBorder: this function returns the entry’s Entry:inner-border property.
// See gtk_entry_set_inner_border() for more information.
//
// Deprecated: Use the standard border and padding CSS properties (through
// objects like StyleContext and CssProvider); the value returned by this
// function is ignored by Entry.
//
// The function returns the following values:
//
//    - border (optional) entry’s Border, or NULL if none was set.
//
func (entry *Entry) InnerBorder() *Border {
	var _arg0 *C.GtkEntry  // out
	var _cret *C.GtkBorder // in

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))

	_cret = C.gtk_entry_get_inner_border(_arg0)
	runtime.KeepAlive(entry)

	var _border *Border // out

	if _cret != nil {
		_border = (*Border)(gextras.NewStructNative(unsafe.Pointer(_cret)))
	}

	return _border
}

// SetInnerBorder sets entry’s inner-border property to border, or clears it if
// NULL is passed. The inner-border is the area around the entry’s text, but
// inside its frame.
//
// If set, this property overrides the inner-border style property. Overriding
// the style-provided border is useful when you want to do in-place editing of
// some text in a canvas or list widget, where pixel-exact positioning of the
// entry is important.
//
// Deprecated: Use the standard border and padding CSS properties (through
// objects like StyleContext and CssProvider); the value set with this function
// is ignored by Entry.
//
// The function takes the following parameters:
//
//    - border (optional) or NULL.
//
func (entry *Entry) SetInnerBorder(border *Border) {
	var _arg0 *C.GtkEntry  // out
	var _arg1 *C.GtkBorder // out

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))
	if border != nil {
		_arg1 = (*C.GtkBorder)(gextras.StructNative(unsafe.Pointer(border)))
	}

	C.gtk_entry_set_inner_border(_arg0, _arg1)
	runtime.KeepAlive(entry)
	runtime.KeepAlive(border)
}

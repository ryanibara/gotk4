// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_radio_menu_item_accessible_get_type()), F: marshalRadioMenuItemAccessibler},
	})
}

// RadioMenuItemAccessibleOverrider contains methods that are overridable.
type RadioMenuItemAccessibleOverrider interface {
}

type RadioMenuItemAccessible struct {
	_ [0]func() // equal guard
	CheckMenuItemAccessible
}

var (
	_ externglib.Objector = (*RadioMenuItemAccessible)(nil)
)

func classInitRadioMenuItemAccessibler(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapRadioMenuItemAccessible(obj *externglib.Object) *RadioMenuItemAccessible {
	return &RadioMenuItemAccessible{
		CheckMenuItemAccessible: CheckMenuItemAccessible{
			MenuItemAccessible: MenuItemAccessible{
				ContainerAccessible: ContainerAccessible{
					WidgetAccessible: WidgetAccessible{
						Accessible: Accessible{
							ObjectClass: atk.ObjectClass{
								Object: obj,
							},
						},
						Component: atk.Component{
							Object: obj,
						},
					},
				},
				Object: obj,
				Action: atk.Action{
					Object: obj,
				},
				Selection: atk.Selection{
					Object: obj,
				},
			},
		},
	}
}

func marshalRadioMenuItemAccessibler(p uintptr) (interface{}, error) {
	return wrapRadioMenuItemAccessible(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

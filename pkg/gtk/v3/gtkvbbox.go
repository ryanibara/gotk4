// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"reflect"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// GType values.
var (
	GTypeVButtonBox = coreglib.Type(C.gtk_vbutton_box_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeVButtonBox, F: marshalVButtonBox},
	})
}

// VButtonBoxOverrides contains methods that are overridable.
type VButtonBoxOverrides struct {
}

func defaultVButtonBoxOverrides(v *VButtonBox) VButtonBoxOverrides {
	return VButtonBoxOverrides{}
}

type VButtonBox struct {
	_ [0]func() // equal guard
	ButtonBox
}

var (
	_ Containerer       = (*VButtonBox)(nil)
	_ coreglib.Objector = (*VButtonBox)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*VButtonBox, *VButtonBoxClass, VButtonBoxOverrides](
		GTypeVButtonBox,
		initVButtonBoxClass,
		wrapVButtonBox,
		defaultVButtonBoxOverrides,
	)
}

func initVButtonBoxClass(gclass unsafe.Pointer, overrides VButtonBoxOverrides, classInitFunc func(*VButtonBoxClass)) {
	if classInitFunc != nil {
		class := (*VButtonBoxClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapVButtonBox(obj *coreglib.Object) *VButtonBox {
	return &VButtonBox{
		ButtonBox: ButtonBox{
			Box: Box{
				Container: Container{
					Widget: Widget{
						InitiallyUnowned: coreglib.InitiallyUnowned{
							Object: obj,
						},
						Object: obj,
						ImplementorIface: atk.ImplementorIface{
							Object: obj,
						},
						Buildable: Buildable{
							Object: obj,
						},
					},
				},
				Object: obj,
				Orientable: Orientable{
					Object: obj,
				},
			},
		},
	}
}

func marshalVButtonBox(p uintptr) (interface{}, error) {
	return wrapVButtonBox(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewVButtonBox creates a new vertical button box.
//
// Deprecated: Use gtk_button_box_new() with GTK_ORIENTATION_VERTICAL instead.
//
// The function returns the following values:
//
//    - vButtonBox: new button box Widget.
//
func NewVButtonBox() *VButtonBox {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_vbutton_box_new()

	var _vButtonBox *VButtonBox // out

	_vButtonBox = wrapVButtonBox(coreglib.Take(unsafe.Pointer(_cret)))

	return _vButtonBox
}

// VButtonBoxClass: instance of this type is always passed by reference.
type VButtonBoxClass struct {
	*vButtonBoxClass
}

// vButtonBoxClass is the struct that's finalized.
type vButtonBoxClass struct {
	native *C.GtkVButtonBoxClass
}

func (v *VButtonBoxClass) ParentClass() *ButtonBoxClass {
	valptr := &v.native.parent_class
	var _v *ButtonBoxClass // out
	_v = (*ButtonBoxClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// DragDestGetTrackMotion returns whether the widget has been configured to
// always emit Widget::drag-motion signals.
//
// The function returns the following values:
//
//    - ok: TRUE if the widget always emits Widget::drag-motion events.
//
func (widget *Widget) DragDestGetTrackMotion() bool {
	var _arg0 *C.GtkWidget // out
	var _cret C.gboolean   // in

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))

	_cret = C.gtk_drag_dest_get_track_motion(_arg0)
	runtime.KeepAlive(widget)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// DragDestSetTrackMotion tells the widget to emit Widget::drag-motion and
// Widget::drag-leave events regardless of the targets and the
// GTK_DEST_DEFAULT_MOTION flag.
//
// This may be used when a widget wants to do generic actions regardless of the
// targets that the source offers.
//
// The function takes the following parameters:
//
//    - trackMotion: whether to accept all targets.
//
func (widget *Widget) DragDestSetTrackMotion(trackMotion bool) {
	var _arg0 *C.GtkWidget // out
	var _arg1 C.gboolean   // out

	_arg0 = (*C.GtkWidget)(unsafe.Pointer(coreglib.InternObject(widget).Native()))
	if trackMotion {
		_arg1 = C.TRUE
	}

	C.gtk_drag_dest_set_track_motion(_arg0, _arg1)
	runtime.KeepAlive(widget)
	runtime.KeepAlive(trackMotion)
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// ShowEnterLocation returns the value previously set with
// gtk_places_sidebar_set_show_enter_location().
//
// The function returns the following values:
//
//    - ok: TRUE if the sidebar will display an “Enter Location” item.
//
func (sidebar *PlacesSidebar) ShowEnterLocation() bool {
	var _arg0 *C.GtkPlacesSidebar // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GtkPlacesSidebar)(unsafe.Pointer(coreglib.InternObject(sidebar).Native()))

	_cret = C.gtk_places_sidebar_get_show_enter_location(_arg0)
	runtime.KeepAlive(sidebar)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// SetShowEnterLocation sets whether the sidebar should show an item for
// entering a location; this is off by default. An application may want to turn
// this on if manually entering URLs is an expected user action.
//
// If you enable this, you should connect to the
// PlacesSidebar::show-enter-location signal.
//
// The function takes the following parameters:
//
//    - showEnterLocation: whether to show an item to enter a location.
//
func (sidebar *PlacesSidebar) SetShowEnterLocation(showEnterLocation bool) {
	var _arg0 *C.GtkPlacesSidebar // out
	var _arg1 C.gboolean          // out

	_arg0 = (*C.GtkPlacesSidebar)(unsafe.Pointer(coreglib.InternObject(sidebar).Native()))
	if showEnterLocation {
		_arg1 = C.TRUE
	}

	C.gtk_places_sidebar_set_show_enter_location(_arg0, _arg1)
	runtime.KeepAlive(sidebar)
	runtime.KeepAlive(showEnterLocation)
}

// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/pango"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// Attributes gets the attribute list that was set on the entry using
// gtk_entry_set_attributes(), if any.
//
// The function returns the following values:
//
//    - attrList (optional): attribute list, or NULL if none was set.
//
func (entry *Entry) Attributes() *pango.AttrList {
	var _arg0 *C.GtkEntry      // out
	var _cret *C.PangoAttrList // in

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))

	_cret = C.gtk_entry_get_attributes(_arg0)
	runtime.KeepAlive(entry)

	var _attrList *pango.AttrList // out

	if _cret != nil {
		_attrList = (*pango.AttrList)(gextras.NewStructNative(unsafe.Pointer(_cret)))
		C.pango_attr_list_ref(_cret)
		runtime.SetFinalizer(
			gextras.StructIntern(unsafe.Pointer(_attrList)),
			func(intern *struct{ C unsafe.Pointer }) {
				C.pango_attr_list_unref((*C.PangoAttrList)(intern.C))
			},
		)
	}

	return _attrList
}

// InputHints gets the value of the Entry:input-hints property.
//
// The function returns the following values:
//
func (entry *Entry) InputHints() InputHints {
	var _arg0 *C.GtkEntry     // out
	var _cret C.GtkInputHints // in

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))

	_cret = C.gtk_entry_get_input_hints(_arg0)
	runtime.KeepAlive(entry)

	var _inputHints InputHints // out

	_inputHints = InputHints(_cret)

	return _inputHints
}

// InputPurpose gets the value of the Entry:input-purpose property.
//
// The function returns the following values:
//
func (entry *Entry) InputPurpose() InputPurpose {
	var _arg0 *C.GtkEntry       // out
	var _cret C.GtkInputPurpose // in

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))

	_cret = C.gtk_entry_get_input_purpose(_arg0)
	runtime.KeepAlive(entry)

	var _inputPurpose InputPurpose // out

	_inputPurpose = InputPurpose(_cret)

	return _inputPurpose
}

// SetAttributes sets a AttrList; the attributes in the list are applied to the
// entry text.
//
// The function takes the following parameters:
//
//    - attrs: AttrList.
//
func (entry *Entry) SetAttributes(attrs *pango.AttrList) {
	var _arg0 *C.GtkEntry      // out
	var _arg1 *C.PangoAttrList // out

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))
	_arg1 = (*C.PangoAttrList)(gextras.StructNative(unsafe.Pointer(attrs)))

	C.gtk_entry_set_attributes(_arg0, _arg1)
	runtime.KeepAlive(entry)
	runtime.KeepAlive(attrs)
}

// SetInputHints sets the Entry:input-hints property, which allows input methods
// to fine-tune their behaviour.
//
// The function takes the following parameters:
//
//    - hints: hints.
//
func (entry *Entry) SetInputHints(hints InputHints) {
	var _arg0 *C.GtkEntry     // out
	var _arg1 C.GtkInputHints // out

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))
	_arg1 = C.GtkInputHints(hints)

	C.gtk_entry_set_input_hints(_arg0, _arg1)
	runtime.KeepAlive(entry)
	runtime.KeepAlive(hints)
}

// SetInputPurpose sets the Entry:input-purpose property which can be used by
// on-screen keyboards and other input methods to adjust their behaviour.
//
// The function takes the following parameters:
//
//    - purpose: purpose.
//
func (entry *Entry) SetInputPurpose(purpose InputPurpose) {
	var _arg0 *C.GtkEntry       // out
	var _arg1 C.GtkInputPurpose // out

	_arg0 = (*C.GtkEntry)(unsafe.Pointer(coreglib.InternObject(entry).Native()))
	_arg1 = C.GtkInputPurpose(purpose)

	C.gtk_entry_set_input_purpose(_arg0, _arg1)
	runtime.KeepAlive(entry)
	runtime.KeepAlive(purpose)
}

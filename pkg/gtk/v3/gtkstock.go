// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
// extern void callbackDelete(gpointer);
// gchar* _gotk4_gtk3_TranslateFunc(gchar*, gpointer);
import "C"

// STOCK_ABOUT: “About” item. ! (help-about.png)
//
// Deprecated: Use named icon &quot;help-about&quot; or the label
// &quot;_About&quot;.
const STOCK_ABOUT = C.STOCK_ABOUT

// STOCK_ADD: “Add” item and icon.
//
// Deprecated: Use named icon &quot;list-add&quot; or the label
// &quot;_Add&quot;.
const STOCK_ADD = C.STOCK_ADD

// STOCK_APPLY: “Apply” item and icon.
//
// Deprecated: Do not use an icon. Use label &quot;_Apply&quot;.
const STOCK_APPLY = C.STOCK_APPLY

// STOCK_BOLD: “Bold” item and icon.
//
// Deprecated: Use named icon &quot;format-text-bold&quot;.
const STOCK_BOLD = C.STOCK_BOLD

// STOCK_CANCEL: “Cancel” item and icon.
//
// Deprecated: Do not use an icon. Use label &quot;_Cancel&quot;.
const STOCK_CANCEL = C.STOCK_CANCEL

// STOCK_CAPS_LOCK_WARNING “Caps Lock Warning” icon.
//
// Deprecated: Use named icon &quot;dialog-warning-symbolic&quot;.
const STOCK_CAPS_LOCK_WARNING = C.STOCK_CAPS_LOCK_WARNING

// STOCK_CDROM: “CD-Rom” item and icon.
//
// Deprecated: Use named icon &quot;media-optical&quot;.
const STOCK_CDROM = C.STOCK_CDROM

// STOCK_CLEAR: “Clear” item and icon.
//
// Deprecated: Use named icon &quot;edit-clear&quot;.
const STOCK_CLEAR = C.STOCK_CLEAR

// STOCK_CLOSE: “Close” item and icon.
//
// Deprecated: Use named icon &quot;window-close&quot; or the label
// &quot;_Close&quot;.
const STOCK_CLOSE = C.STOCK_CLOSE

// STOCK_COLOR_PICKER: “Color Picker” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_COLOR_PICKER = C.STOCK_COLOR_PICKER

// STOCK_CONNECT: “Connect” icon.
//
// Deprecated: since version 3.10.
const STOCK_CONNECT = C.STOCK_CONNECT

// STOCK_CONVERT: “Convert” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_CONVERT = C.STOCK_CONVERT

// STOCK_COPY: “Copy” item and icon.
//
// Deprecated: Use the named icon &quot;edit-copy&quot; or the label
// &quot;_Copy&quot;.
const STOCK_COPY = C.STOCK_COPY

// STOCK_CUT: “Cut” item and icon.
//
// Deprecated: Use the named icon &quot;edit-cut&quot; or the label
// &quot;Cu_t&quot;.
const STOCK_CUT = C.STOCK_CUT

// STOCK_DELETE: “Delete” item and icon.
//
// Deprecated: Use the named icon &quot;edit-delete&quot; or the label
// &quot;_Delete&quot;.
const STOCK_DELETE = C.STOCK_DELETE

// STOCK_DIALOG_AUTHENTICATION: “Authentication” item and icon.
//
// Deprecated: Use named icon &quot;dialog-password&quot;.
const STOCK_DIALOG_AUTHENTICATION = C.STOCK_DIALOG_AUTHENTICATION

// STOCK_DIALOG_ERROR: “Error” item and icon.
//
// Deprecated: Use named icon &quot;dialog-error&quot;.
const STOCK_DIALOG_ERROR = C.STOCK_DIALOG_ERROR

// STOCK_DIALOG_INFO: “Information” item and icon.
//
// Deprecated: Use named icon &quot;dialog-information&quot;.
const STOCK_DIALOG_INFO = C.STOCK_DIALOG_INFO

// STOCK_DIALOG_QUESTION: “Question” item and icon.
//
// Deprecated: Use named icon &quot;dialog-question&quot;.
const STOCK_DIALOG_QUESTION = C.STOCK_DIALOG_QUESTION

// STOCK_DIALOG_WARNING: “Warning” item and icon.
//
// Deprecated: Use named icon &quot;dialog-warning&quot;.
const STOCK_DIALOG_WARNING = C.STOCK_DIALOG_WARNING

// STOCK_DIRECTORY: “Directory” icon.
//
// Deprecated: Use named icon &quot;folder&quot;.
const STOCK_DIRECTORY = C.STOCK_DIRECTORY

// STOCK_DISCARD: “Discard” item.
//
// Deprecated: since version 3.10.
const STOCK_DISCARD = C.STOCK_DISCARD

// STOCK_DISCONNECT: “Disconnect” icon.
//
// Deprecated: since version 3.10.
const STOCK_DISCONNECT = C.STOCK_DISCONNECT

// STOCK_DND: “Drag-And-Drop” icon.
//
// Deprecated: since version 3.10.
const STOCK_DND = C.STOCK_DND

// STOCK_DND_MULTIPLE: “Drag-And-Drop multiple” icon.
//
// Deprecated: since version 3.10.
const STOCK_DND_MULTIPLE = C.STOCK_DND_MULTIPLE

// STOCK_EDIT: “Edit” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_EDIT = C.STOCK_EDIT

// STOCK_EXECUTE: “Execute” item and icon.
//
// Deprecated: Use named icon &quot;system-run&quot;.
const STOCK_EXECUTE = C.STOCK_EXECUTE

// STOCK_FILE: “File” item and icon.
//
// Since 3.0, this item has a label, before it only had an icon.
//
// Deprecated: Use named icon &quot;text-x-generic&quot;.
const STOCK_FILE = C.STOCK_FILE

// STOCK_FIND: “Find” item and icon.
//
// Deprecated: Use named icon &quot;edit-find&quot;.
const STOCK_FIND = C.STOCK_FIND

// STOCK_FIND_AND_REPLACE: “Find and Replace” item and icon.
//
// Deprecated: Use named icon &quot;edit-find-replace&quot;.
const STOCK_FIND_AND_REPLACE = C.STOCK_FIND_AND_REPLACE

// STOCK_FLOPPY: “Floppy” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_FLOPPY = C.STOCK_FLOPPY

// STOCK_FULLSCREEN: “Fullscreen” item and icon.
//
// Deprecated: Use named icon &quot;view-fullscreen&quot;.
const STOCK_FULLSCREEN = C.STOCK_FULLSCREEN

// STOCK_GOTO_BOTTOM: “Bottom” item and icon.
//
// Deprecated: Use named icon &quot;go-bottom&quot;.
const STOCK_GOTO_BOTTOM = C.STOCK_GOTO_BOTTOM

// STOCK_GOTO_FIRST: “First” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;go-first&quot;.
const STOCK_GOTO_FIRST = C.STOCK_GOTO_FIRST

// STOCK_GOTO_LAST: “Last” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;go-last&quot;.
const STOCK_GOTO_LAST = C.STOCK_GOTO_LAST

// STOCK_GOTO_TOP: “Top” item and icon.
//
// Deprecated: Use named icon &quot;go-top&quot;.
const STOCK_GOTO_TOP = C.STOCK_GOTO_TOP

// STOCK_GO_BACK: “Back” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;go-previous&quot;.
const STOCK_GO_BACK = C.STOCK_GO_BACK

// STOCK_GO_DOWN: “Down” item and icon.
//
// Deprecated: Use named icon &quot;go-down&quot;.
const STOCK_GO_DOWN = C.STOCK_GO_DOWN

// STOCK_GO_FORWARD: “Forward” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;go-next&quot;.
const STOCK_GO_FORWARD = C.STOCK_GO_FORWARD

// STOCK_GO_UP: “Up” item and icon.
//
// Deprecated: Use named icon &quot;go-up&quot;.
const STOCK_GO_UP = C.STOCK_GO_UP

// STOCK_HARDDISK: “Harddisk” item and icon.
//
// Deprecated: Use named icon &quot;drive-harddisk&quot;.
const STOCK_HARDDISK = C.STOCK_HARDDISK

// STOCK_HELP: “Help” item and icon.
//
// Deprecated: Use named icon &quot;help-browser&quot;.
const STOCK_HELP = C.STOCK_HELP

// STOCK_HOME: “Home” item and icon.
//
// Deprecated: Use named icon &quot;go-home&quot;.
const STOCK_HOME = C.STOCK_HOME

// STOCK_INDENT: “Indent” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;format-indent-more&quot;.
const STOCK_INDENT = C.STOCK_INDENT

// STOCK_INDEX: “Index” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_INDEX = C.STOCK_INDEX

// STOCK_INFO: “Info” item and icon.
//
// Deprecated: Use named icon &quot;dialog-information&quot;.
const STOCK_INFO = C.STOCK_INFO

// STOCK_ITALIC: “Italic” item and icon.
//
// Deprecated: Use named icon &quot;format-text-italic&quot;.
const STOCK_ITALIC = C.STOCK_ITALIC

// STOCK_JUMP_TO: “Jump to” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;go-jump&quot;.
const STOCK_JUMP_TO = C.STOCK_JUMP_TO

// STOCK_JUSTIFY_CENTER: “Center” item and icon.
//
// Deprecated: Use named icon &quot;format-justify-center&quot;.
const STOCK_JUSTIFY_CENTER = C.STOCK_JUSTIFY_CENTER

// STOCK_JUSTIFY_FILL: “Fill” item and icon.
//
// Deprecated: Use named icon &quot;format-justify-fill&quot;.
const STOCK_JUSTIFY_FILL = C.STOCK_JUSTIFY_FILL

// STOCK_JUSTIFY_LEFT: “Left” item and icon.
//
// Deprecated: Use named icon &quot;format-justify-left&quot;.
const STOCK_JUSTIFY_LEFT = C.STOCK_JUSTIFY_LEFT

// STOCK_JUSTIFY_RIGHT: “Right” item and icon.
//
// Deprecated: Use named icon &quot;format-justify-right&quot;.
const STOCK_JUSTIFY_RIGHT = C.STOCK_JUSTIFY_RIGHT

// STOCK_LEAVE_FULLSCREEN: “Leave Fullscreen” item and icon.
//
// Deprecated: Use named icon &quot;view-restore&quot;.
const STOCK_LEAVE_FULLSCREEN = C.STOCK_LEAVE_FULLSCREEN

// STOCK_MEDIA_FORWARD: “Media Forward” item and icon. The icon has an RTL
// variant.
//
// Deprecated: Use named icon &quot;media-seek-forward&quot; or the label
// &quot;_Forward&quot;.
const STOCK_MEDIA_FORWARD = C.STOCK_MEDIA_FORWARD

// STOCK_MEDIA_NEXT: “Media Next” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;media-skip-forward&quot; or the label
// &quot;_Next&quot;.
const STOCK_MEDIA_NEXT = C.STOCK_MEDIA_NEXT

// STOCK_MEDIA_PAUSE: “Media Pause” item and icon.
//
// Deprecated: Use named icon &quot;media-playback-pause&quot; or the label
// &quot;P_ause&quot;.
const STOCK_MEDIA_PAUSE = C.STOCK_MEDIA_PAUSE

// STOCK_MEDIA_PLAY: “Media Play” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;media-playback-start&quot; or the label
// &quot;_Play&quot;.
const STOCK_MEDIA_PLAY = C.STOCK_MEDIA_PLAY

// STOCK_MEDIA_PREVIOUS: “Media Previous” item and icon. The icon has an RTL
// variant.
//
// Deprecated: Use named icon &quot;media-skip-backward&quot; or the label
// &quot;Pre_vious&quot;.
const STOCK_MEDIA_PREVIOUS = C.STOCK_MEDIA_PREVIOUS

// STOCK_MEDIA_RECORD: “Media Record” item and icon.
//
// Deprecated: Use named icon &quot;media-record&quot; or the label
// &quot;_Record&quot;.
const STOCK_MEDIA_RECORD = C.STOCK_MEDIA_RECORD

// STOCK_MEDIA_REWIND: “Media Rewind” item and icon. The icon has an RTL
// variant.
//
// Deprecated: Use named icon &quot;media-seek-backward&quot; or the label
// &quot;R_ewind&quot;.
const STOCK_MEDIA_REWIND = C.STOCK_MEDIA_REWIND

// STOCK_MEDIA_STOP: “Media Stop” item and icon.
//
// Deprecated: Use named icon &quot;media-playback-stop&quot; or the label
// &quot;_Stop&quot;.
const STOCK_MEDIA_STOP = C.STOCK_MEDIA_STOP

// STOCK_MISSING_IMAGE: “Missing image” icon.
//
// Deprecated: Use named icon &quot;image-missing&quot;.
const STOCK_MISSING_IMAGE = C.STOCK_MISSING_IMAGE

// STOCK_NETWORK: “Network” item and icon.
//
// Deprecated: Use named icon &quot;network-workgroup&quot;.
const STOCK_NETWORK = C.STOCK_NETWORK

// STOCK_NEW: “New” item and icon.
//
// Deprecated: Use named icon &quot;document-new&quot; or the label
// &quot;_New&quot;.
const STOCK_NEW = C.STOCK_NEW

// STOCK_NO: “No” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_NO = C.STOCK_NO

// STOCK_OK: “OK” item and icon.
//
// Deprecated: Do not use an icon. Use label &quot;_OK&quot;.
const STOCK_OK = C.STOCK_OK

// STOCK_OPEN: “Open” item and icon.
//
// Deprecated: Use named icon &quot;document-open&quot; or the label
// &quot;_Open&quot;.
const STOCK_OPEN = C.STOCK_OPEN

// STOCK_ORIENTATION_LANDSCAPE: “Landscape Orientation” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_ORIENTATION_LANDSCAPE = C.STOCK_ORIENTATION_LANDSCAPE

// STOCK_ORIENTATION_PORTRAIT: “Portrait Orientation” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_ORIENTATION_PORTRAIT = C.STOCK_ORIENTATION_PORTRAIT

// STOCK_ORIENTATION_REVERSE_LANDSCAPE: “Reverse Landscape Orientation” item and
// icon.
//
// Deprecated: since version 3.10.
const STOCK_ORIENTATION_REVERSE_LANDSCAPE = C.STOCK_ORIENTATION_REVERSE_LANDSCAPE

// STOCK_ORIENTATION_REVERSE_PORTRAIT: “Reverse Portrait Orientation” item and
// icon.
//
// Deprecated: since version 3.10.
const STOCK_ORIENTATION_REVERSE_PORTRAIT = C.STOCK_ORIENTATION_REVERSE_PORTRAIT

// STOCK_PAGE_SETUP: “Page Setup” item and icon.
//
// Deprecated: Use named icon &quot;document-page-setup&quot; or the label
// &quot;Page Set_up&quot;.
const STOCK_PAGE_SETUP = C.STOCK_PAGE_SETUP

// STOCK_PASTE: “Paste” item and icon.
//
// Deprecated: Use named icon &quot;edit-paste&quot; or the label
// &quot;_Paste&quot;.
const STOCK_PASTE = C.STOCK_PASTE

// STOCK_PREFERENCES: “Preferences” item and icon.
//
// Deprecated: Use named icon &quot;preferences-system&quot; or the label
// &quot;_Preferences&quot;.
const STOCK_PREFERENCES = C.STOCK_PREFERENCES

// STOCK_PRINT: “Print” item and icon.
//
// Deprecated: Use named icon &quot;document-print&quot; or the label
// &quot;_Print&quot;.
const STOCK_PRINT = C.STOCK_PRINT

// STOCK_PRINT_ERROR: “Print Error” icon.
//
// Deprecated: Use named icon &quot;printer-error&quot;.
const STOCK_PRINT_ERROR = C.STOCK_PRINT_ERROR

// STOCK_PRINT_PAUSED: “Print Paused” icon.
//
// Deprecated: since version 3.10.
const STOCK_PRINT_PAUSED = C.STOCK_PRINT_PAUSED

// STOCK_PRINT_PREVIEW: “Print Preview” item and icon.
//
// Deprecated: Use label &quot;Pre_view&quot;.
const STOCK_PRINT_PREVIEW = C.STOCK_PRINT_PREVIEW

// STOCK_PRINT_REPORT: “Print Report” icon.
//
// Deprecated: since version 3.10.
const STOCK_PRINT_REPORT = C.STOCK_PRINT_REPORT

// STOCK_PRINT_WARNING: “Print Warning” icon.
//
// Deprecated: since version 3.10.
const STOCK_PRINT_WARNING = C.STOCK_PRINT_WARNING

// STOCK_PROPERTIES: “Properties” item and icon.
//
// Deprecated: Use named icon &quot;document-properties&quot; or the label
// &quot;_Properties&quot;.
const STOCK_PROPERTIES = C.STOCK_PROPERTIES

// STOCK_QUIT: “Quit” item and icon.
//
// Deprecated: Use named icon &quot;application-exit&quot; or the label
// &quot;_Quit&quot;.
const STOCK_QUIT = C.STOCK_QUIT

// STOCK_REDO: “Redo” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;edit-redo&quot; or the label
// &quot;_Redo&quot;.
const STOCK_REDO = C.STOCK_REDO

// STOCK_REFRESH: “Refresh” item and icon.
//
// Deprecated: Use named icon &quot;view-refresh&quot; or the label
// &quot;_Refresh&quot;.
const STOCK_REFRESH = C.STOCK_REFRESH

// STOCK_REMOVE: “Remove” item and icon.
//
// Deprecated: Use named icon &quot;list-remove&quot; or the label
// &quot;_Remove&quot;.
const STOCK_REMOVE = C.STOCK_REMOVE

// STOCK_REVERT_TO_SAVED: “Revert” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;document-revert&quot; or the label
// &quot;_Revert&quot;.
const STOCK_REVERT_TO_SAVED = C.STOCK_REVERT_TO_SAVED

// STOCK_SAVE: “Save” item and icon.
//
// Deprecated: Use named icon &quot;document-save&quot; or the label
// &quot;_Save&quot;.
const STOCK_SAVE = C.STOCK_SAVE

// STOCK_SAVE_AS: “Save As” item and icon.
//
// Deprecated: Use named icon &quot;document-save-as&quot; or the label
// &quot;Save _As&quot;.
const STOCK_SAVE_AS = C.STOCK_SAVE_AS

// STOCK_SELECT_ALL: “Select All” item and icon.
//
// Deprecated: Use named icon &quot;edit-select-all&quot; or the label
// &quot;Select _All&quot;.
const STOCK_SELECT_ALL = C.STOCK_SELECT_ALL

// STOCK_SELECT_COLOR: “Color” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_SELECT_COLOR = C.STOCK_SELECT_COLOR

// STOCK_SELECT_FONT: “Font” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_SELECT_FONT = C.STOCK_SELECT_FONT

// STOCK_SORT_ASCENDING: “Ascending” item and icon.
//
// Deprecated: Use named icon &quot;view-sort-ascending&quot;.
const STOCK_SORT_ASCENDING = C.STOCK_SORT_ASCENDING

// STOCK_SORT_DESCENDING: “Descending” item and icon.
//
// Deprecated: Use named icon &quot;view-sort-descending&quot;.
const STOCK_SORT_DESCENDING = C.STOCK_SORT_DESCENDING

// STOCK_SPELL_CHECK: “Spell Check” item and icon.
//
// Deprecated: Use named icon &quot;tools-check-spelling&quot;.
const STOCK_SPELL_CHECK = C.STOCK_SPELL_CHECK

// STOCK_STOP: “Stop” item and icon.
//
// Deprecated: Use named icon &quot;process-stop&quot; or the label
// &quot;_Stop&quot;.
const STOCK_STOP = C.STOCK_STOP

// STOCK_STRIKETHROUGH: “Strikethrough” item and icon.
//
// Deprecated: Use named icon &quot;format-text-strikethrough&quot; or the label
// &quot;_Strikethrough&quot;.
const STOCK_STRIKETHROUGH = C.STOCK_STRIKETHROUGH

// STOCK_UNDELETE: “Undelete” item and icon. The icon has an RTL variant.
//
// Deprecated: since version 3.10.
const STOCK_UNDELETE = C.STOCK_UNDELETE

// STOCK_UNDERLINE: “Underline” item and icon.
//
// Deprecated: Use named icon &quot;format-text-underline&quot; or the label
// &quot;_Underline&quot;.
const STOCK_UNDERLINE = C.STOCK_UNDERLINE

// STOCK_UNDO: “Undo” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;edit-undo&quot; or the label
// &quot;_Undo&quot;.
const STOCK_UNDO = C.STOCK_UNDO

// STOCK_UNINDENT: “Unindent” item and icon. The icon has an RTL variant.
//
// Deprecated: Use named icon &quot;format-indent-less&quot;.
const STOCK_UNINDENT = C.STOCK_UNINDENT

// STOCK_YES: “Yes” item and icon.
//
// Deprecated: since version 3.10.
const STOCK_YES = C.STOCK_YES

// STOCK_ZOOM_100: “Zoom 100%” item and icon.
//
// Deprecated: Use named icon &quot;zoom-original&quot; or the label
// &quot;_Normal Size&quot;.
const STOCK_ZOOM_100 = C.STOCK_ZOOM_100

// STOCK_ZOOM_FIT: “Zoom to Fit” item and icon.
//
// Deprecated: Use named icon &quot;zoom-fit-best&quot; or the label &quot;Best
// _Fit&quot;.
const STOCK_ZOOM_FIT = C.STOCK_ZOOM_FIT

// STOCK_ZOOM_IN: “Zoom In” item and icon.
//
// Deprecated: Use named icon &quot;zoom-in&quot; or the label &quot;Zoom
// _In&quot;.
const STOCK_ZOOM_IN = C.STOCK_ZOOM_IN

// STOCK_ZOOM_OUT: “Zoom Out” item and icon.
//
// Deprecated: Use named icon &quot;zoom-out&quot; or the label &quot;Zoom
// _Out&quot;.
const STOCK_ZOOM_OUT = C.STOCK_ZOOM_OUT

type Stock = string

// TranslateFunc: function used to translate messages in e.g. IconFactory and
// ActionGroup.
//
// Deprecated: since version 3.10.
type TranslateFunc func(path string) (utf8 string)

//export _gotk4_gtk3_TranslateFunc
func _gotk4_gtk3_TranslateFunc(arg0 *C.gchar, arg1 C.gpointer) (cret *C.gchar) {
	v := gbox.Get(uintptr(arg1))
	if v == nil {
		panic(`callback not found`)
	}

	var path string // out

	path = C.GoString((*C.gchar)(unsafe.Pointer(arg0)))

	fn := v.(TranslateFunc)
	utf8 := fn(path)

	cret = (*C.gchar)(unsafe.Pointer(C.CString(utf8)))

	return cret
}

// StockAdd registers each of the stock items in items. If an item already
// exists with the same stock ID as one of the items, the old item gets
// replaced. The stock items are copied, so GTK+ does not hold any pointer into
// items and items can be freed. Use gtk_stock_add_static() if items is
// persistent and GTK+ need not copy the array.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - items or array of items.
//
func StockAdd(items []StockItem) {
	var _arg1 *C.GtkStockItem // out
	var _arg2 C.guint

	_arg2 = (C.guint)(len(items))
	_arg1 = (*C.GtkStockItem)(C.malloc(C.size_t(uint(len(items)) * uint(C.sizeof_GtkStockItem))))
	defer C.free(unsafe.Pointer(_arg1))
	{
		out := unsafe.Slice((*C.GtkStockItem)(_arg1), len(items))
		for i := range items {
			out[i] = *(*C.GtkStockItem)(gextras.StructNative(unsafe.Pointer((&items[i]))))
		}
	}

	C.gtk_stock_add(_arg1, _arg2)
	runtime.KeepAlive(items)
}

// StockAddStatic: same as gtk_stock_add(), but doesn’t copy items, so items
// must persist until application exit.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - items or array of StockItem.
//
func StockAddStatic(items []StockItem) {
	var _arg1 *C.GtkStockItem // out
	var _arg2 C.guint

	_arg2 = (C.guint)(len(items))
	_arg1 = (*C.GtkStockItem)(C.malloc(C.size_t(uint(len(items)) * uint(C.sizeof_GtkStockItem))))
	defer C.free(unsafe.Pointer(_arg1))
	{
		out := unsafe.Slice((*C.GtkStockItem)(_arg1), len(items))
		for i := range items {
			out[i] = *(*C.GtkStockItem)(gextras.StructNative(unsafe.Pointer((&items[i]))))
		}
	}

	C.gtk_stock_add_static(_arg1, _arg2)
	runtime.KeepAlive(items)
}

// StockListIds retrieves a list of all known stock IDs added to a IconFactory
// or registered with gtk_stock_add(). The list must be freed with
// g_slist_free(), and each string in the list must be freed with g_free().
//
// Deprecated: since version 3.10.
func StockListIds() []string {
	var _cret *C.GSList // in

	_cret = C.gtk_stock_list_ids()

	var _sList []string // out

	_sList = make([]string, 0, gextras.SListSize(unsafe.Pointer(_cret)))
	gextras.MoveSList(unsafe.Pointer(_cret), true, func(v unsafe.Pointer) {
		src := (*C.gchar)(v)
		var dst string // out
		dst = C.GoString((*C.gchar)(unsafe.Pointer(src)))
		defer C.free(unsafe.Pointer(src))
		_sList = append(_sList, dst)
	})

	return _sList
}

// StockLookup fills item with the registered values for stock_id, returning
// TRUE if stock_id was known.
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - stockId: stock item name.
//
func StockLookup(stockId string) (*StockItem, bool) {
	var _arg1 *C.gchar       // out
	var _arg2 C.GtkStockItem // in
	var _cret C.gboolean     // in

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(stockId)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.gtk_stock_lookup(_arg1, &_arg2)
	runtime.KeepAlive(stockId)

	var _item *StockItem // out
	var _ok bool         // out

	_item = (*StockItem)(gextras.NewStructNative(unsafe.Pointer((&_arg2))))
	if _cret != 0 {
		_ok = true
	}

	return _item, _ok
}

// StockSetTranslateFunc sets a function to be used for translating the label of
// a stock item.
//
// If no function is registered for a translation domain, g_dgettext() is used.
//
// The function is used for all stock items whose translation_domain matches
// domain. Note that it is possible to use strings different from the actual
// gettext translation domain of your application for this, as long as your
// TranslateFunc uses the correct domain when calling dgettext(). This can be
// useful, e.g. when dealing with message contexts:
//
//    GtkStockItem items[] = {
//     { MY_ITEM1, NC_("odd items", "Item 1"), 0, 0, "odd-item-domain" },
//     { MY_ITEM2, NC_("even items", "Item 2"), 0, 0, "even-item-domain" },
//    };
//
//    gchar *
//    my_translate_func (const gchar *msgid,
//                       gpointer     data)
//    {
//      gchar *msgctxt = data;
//
//      return (gchar*)g_dpgettext2 (GETTEXT_PACKAGE, msgctxt, msgid);
//    }
//
//    ...
//
//    gtk_stock_add (items, G_N_ELEMENTS (items));
//    gtk_stock_set_translate_func ("odd-item-domain", my_translate_func, "odd items");
//    gtk_stock_set_translate_func ("even-item-domain", my_translate_func, "even items");
//
// Deprecated: since version 3.10.
//
// The function takes the following parameters:
//
//    - domain: translation domain for which func shall be used.
//    - fn: TranslateFunc.
//
func StockSetTranslateFunc(domain string, fn TranslateFunc) {
	var _arg1 *C.gchar           // out
	var _arg2 C.GtkTranslateFunc // out
	var _arg3 C.gpointer
	var _arg4 C.GDestroyNotify

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(domain)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*[0]byte)(C._gotk4_gtk3_TranslateFunc)
	_arg3 = C.gpointer(gbox.Assign(fn))
	_arg4 = (C.GDestroyNotify)((*[0]byte)(C.callbackDelete))

	C.gtk_stock_set_translate_func(_arg1, _arg2, _arg3, _arg4)
	runtime.KeepAlive(domain)
	runtime.KeepAlive(fn)
}

// StockItem: deprecated: since version 3.10.
//
// An instance of this type is always passed by reference.
type StockItem struct {
	*stockItem
}

// stockItem is the struct that's finalized.
type stockItem struct {
	native *C.GtkStockItem
}

// StockID: identifier.
func (s *StockItem) StockID() string {
	var v string // out
	v = C.GoString((*C.gchar)(unsafe.Pointer(s.native.stock_id)))
	return v
}

// Label: user visible label.
func (s *StockItem) Label() string {
	var v string // out
	v = C.GoString((*C.gchar)(unsafe.Pointer(s.native.label)))
	return v
}

// Modifier type for keyboard accelerator.
func (s *StockItem) Modifier() gdk.ModifierType {
	var v gdk.ModifierType // out
	v = gdk.ModifierType(s.native.modifier)
	return v
}

// Keyval: keyboard accelerator.
func (s *StockItem) Keyval() uint {
	var v uint // out
	v = uint(s.native.keyval)
	return v
}

// TranslationDomain: translation domain of the menu or toolbar item.
func (s *StockItem) TranslationDomain() string {
	var v string // out
	v = C.GoString((*C.gchar)(unsafe.Pointer(s.native.translation_domain)))
	return v
}

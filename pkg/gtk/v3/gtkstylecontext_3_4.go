// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/cairo"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/pango"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// RenderInsertionCursor draws a text caret on cr at the specified index of
// layout.
//
// The function takes the following parameters:
//
//    - context: StyleContext.
//    - cr: #cairo_t.
//    - x: x origin.
//    - y: y origin.
//    - layout of the text.
//    - index in the Layout.
//    - direction of the text.
//
func RenderInsertionCursor(context *StyleContext, cr *cairo.Context, x, y float64, layout *pango.Layout, index int, direction pango.Direction) {
	var _arg1 *C.GtkStyleContext // out
	var _arg2 *C.cairo_t         // out
	var _arg3 C.gdouble          // out
	var _arg4 C.gdouble          // out
	var _arg5 *C.PangoLayout     // out
	var _arg6 C.int              // out
	var _arg7 C.PangoDirection   // out

	_arg1 = (*C.GtkStyleContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))
	_arg2 = (*C.cairo_t)(unsafe.Pointer(cr.Native()))
	_arg3 = C.gdouble(x)
	_arg4 = C.gdouble(y)
	_arg5 = (*C.PangoLayout)(unsafe.Pointer(coreglib.InternObject(layout).Native()))
	_arg6 = C.int(index)
	_arg7 = C.PangoDirection(direction)

	C.gtk_render_insertion_cursor(_arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7)
	runtime.KeepAlive(context)
	runtime.KeepAlive(cr)
	runtime.KeepAlive(x)
	runtime.KeepAlive(y)
	runtime.KeepAlive(layout)
	runtime.KeepAlive(index)
	runtime.KeepAlive(direction)
}

// Parent gets the parent context set via gtk_style_context_set_parent(). See
// that function for details.
//
// The function returns the following values:
//
//    - styleContext (optional): parent context or NULL.
//
func (context *StyleContext) Parent() *StyleContext {
	var _arg0 *C.GtkStyleContext // out
	var _cret *C.GtkStyleContext // in

	_arg0 = (*C.GtkStyleContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.gtk_style_context_get_parent(_arg0)
	runtime.KeepAlive(context)

	var _styleContext *StyleContext // out

	if _cret != nil {
		_styleContext = wrapStyleContext(coreglib.Take(unsafe.Pointer(_cret)))
	}

	return _styleContext
}

// SetParent sets the parent style context for context. The parent style context
// is used to implement inheritance
// (http://www.w3.org/TR/css3-cascade/#inheritance) of properties.
//
// If you are using a StyleContext returned from gtk_widget_get_style_context(),
// the parent will be set for you.
//
// The function takes the following parameters:
//
//    - parent (optional): new parent or NULL.
//
func (context *StyleContext) SetParent(parent *StyleContext) {
	var _arg0 *C.GtkStyleContext // out
	var _arg1 *C.GtkStyleContext // out

	_arg0 = (*C.GtkStyleContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))
	if parent != nil {
		_arg1 = (*C.GtkStyleContext)(unsafe.Pointer(coreglib.InternObject(parent).Native()))
	}

	C.gtk_style_context_set_parent(_arg0, _arg1)
	runtime.KeepAlive(context)
	runtime.KeepAlive(parent)
}

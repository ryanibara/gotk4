// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
import "C"

// DistributeNaturalAllocation distributes extra_space to child sizes by
// bringing smaller children up to natural size first.
//
// The remaining space will be added to the minimum_size member of the
// GtkRequestedSize struct. If all sizes reach their natural size then the
// remaining space is returned.
//
// The function takes the following parameters:
//
//    - extraSpace: extra space to redistribute among children after subtracting
//      minimum sizes and any child padding from the overall allocation.
//    - nRequestedSizes: number of requests to fit into the allocation.
//    - sizes: array of structs with a client pointer and a minimum/natural size
//      in the orientation of the allocation.
//
// The function returns the following values:
//
//    - gint: remainder of extra_space after redistributing space to sizes.
//
func DistributeNaturalAllocation(extraSpace int32, nRequestedSizes uint32, sizes *RequestedSize) int32 {
	var args [3]girepository.Argument
	var _arg0 C.gint  // out
	var _arg1 C.guint // out
	var _arg2 *C.void // out
	var _cret C.gint  // in

	_arg0 = C.gint(extraSpace)
	_arg1 = C.guint(nRequestedSizes)
	_arg2 = (*C.void)(gextras.StructNative(unsafe.Pointer(sizes)))
	*(*int32)(unsafe.Pointer(&args[0])) = _arg0
	*(*uint32)(unsafe.Pointer(&args[1])) = _arg1
	*(**RequestedSize)(unsafe.Pointer(&args[2])) = _arg2

	_gret := girepository.MustFind("Gtk", "distribute_natural_allocation").Invoke(args[:], nil)
	_cret = *(*C.gint)(unsafe.Pointer(&_gret))

	runtime.KeepAlive(extraSpace)
	runtime.KeepAlive(nRequestedSizes)
	runtime.KeepAlive(sizes)

	var _gint int32 // out

	_gint = int32(_cret)

	return _gint
}

// RequestedSize represents a request of a screen object in a given orientation.
// These are primarily used in container implementations when allocating a
// natural size for children calling. See gtk_distribute_natural_allocation().
//
// An instance of this type is always passed by reference.
type RequestedSize struct {
	*requestedSize
}

// requestedSize is the struct that's finalized.
type requestedSize struct {
	native *C.GtkRequestedSize
}

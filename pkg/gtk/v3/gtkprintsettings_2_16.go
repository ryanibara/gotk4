// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// PrinterLpi gets the value of GTK_PRINT_SETTINGS_PRINTER_LPI.
//
// The function returns the following values:
//
//    - gdouble: resolution in lpi (lines per inch).
//
func (settings *PrintSettings) PrinterLpi() float64 {
	var _arg0 *C.GtkPrintSettings // out
	var _cret C.gdouble           // in

	_arg0 = (*C.GtkPrintSettings)(unsafe.Pointer(coreglib.InternObject(settings).Native()))

	_cret = C.gtk_print_settings_get_printer_lpi(_arg0)
	runtime.KeepAlive(settings)

	var _gdouble float64 // out

	_gdouble = float64(_cret)

	return _gdouble
}

// ResolutionX gets the value of GTK_PRINT_SETTINGS_RESOLUTION_X.
//
// The function returns the following values:
//
//    - gint: horizontal resolution in dpi.
//
func (settings *PrintSettings) ResolutionX() int {
	var _arg0 *C.GtkPrintSettings // out
	var _cret C.gint              // in

	_arg0 = (*C.GtkPrintSettings)(unsafe.Pointer(coreglib.InternObject(settings).Native()))

	_cret = C.gtk_print_settings_get_resolution_x(_arg0)
	runtime.KeepAlive(settings)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// ResolutionY gets the value of GTK_PRINT_SETTINGS_RESOLUTION_Y.
//
// The function returns the following values:
//
//    - gint: vertical resolution in dpi.
//
func (settings *PrintSettings) ResolutionY() int {
	var _arg0 *C.GtkPrintSettings // out
	var _cret C.gint              // in

	_arg0 = (*C.GtkPrintSettings)(unsafe.Pointer(coreglib.InternObject(settings).Native()))

	_cret = C.gtk_print_settings_get_resolution_y(_arg0)
	runtime.KeepAlive(settings)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// SetPrinterLpi sets the value of GTK_PRINT_SETTINGS_PRINTER_LPI.
//
// The function takes the following parameters:
//
//    - lpi: resolution in lpi (lines per inch).
//
func (settings *PrintSettings) SetPrinterLpi(lpi float64) {
	var _arg0 *C.GtkPrintSettings // out
	var _arg1 C.gdouble           // out

	_arg0 = (*C.GtkPrintSettings)(unsafe.Pointer(coreglib.InternObject(settings).Native()))
	_arg1 = C.gdouble(lpi)

	C.gtk_print_settings_set_printer_lpi(_arg0, _arg1)
	runtime.KeepAlive(settings)
	runtime.KeepAlive(lpi)
}

// SetResolutionXY sets the values of GTK_PRINT_SETTINGS_RESOLUTION,
// GTK_PRINT_SETTINGS_RESOLUTION_X and GTK_PRINT_SETTINGS_RESOLUTION_Y.
//
// The function takes the following parameters:
//
//    - resolutionX: horizontal resolution in dpi.
//    - resolutionY: vertical resolution in dpi.
//
func (settings *PrintSettings) SetResolutionXY(resolutionX, resolutionY int) {
	var _arg0 *C.GtkPrintSettings // out
	var _arg1 C.gint              // out
	var _arg2 C.gint              // out

	_arg0 = (*C.GtkPrintSettings)(unsafe.Pointer(coreglib.InternObject(settings).Native()))
	_arg1 = C.gint(resolutionX)
	_arg2 = C.gint(resolutionY)

	C.gtk_print_settings_set_resolution_xy(_arg0, _arg1, _arg2)
	runtime.KeepAlive(settings)
	runtime.KeepAlive(resolutionX)
	runtime.KeepAlive(resolutionY)
}

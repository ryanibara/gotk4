// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// ContentTypeIsMIMEType determines if type is a subset of mime_type.
// Convenience wrapper around g_content_type_is_a().
//
// The function takes the following parameters:
//
//    - typ: content type string.
//    - mimeType: mime type string.
//
// The function returns the following values:
//
//    - ok: TRUE if type is a kind of mime_type, FALSE otherwise.
//
func ContentTypeIsMIMEType(typ, mimeType string) bool {
	var _arg1 *C.gchar   // out
	var _arg2 *C.gchar   // out
	var _cret C.gboolean // in

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(typ)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.gchar)(unsafe.Pointer(C.CString(mimeType)))
	defer C.free(unsafe.Pointer(_arg2))

	_cret = C.g_content_type_is_mime_type(_arg1, _arg2)
	runtime.KeepAlive(typ)
	runtime.KeepAlive(mimeType)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

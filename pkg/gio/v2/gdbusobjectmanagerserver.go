// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// SetConnection exports all objects managed by manager on connection. If
// connection is NULL, stops exporting objects.
//
// The function takes the following parameters:
//
//    - connection (optional) or NULL.
//
func (manager *DBusObjectManagerServer) SetConnection(connection *DBusConnection) {
	var _arg0 *C.GDBusObjectManagerServer // out
	var _arg1 *C.GDBusConnection          // out

	_arg0 = (*C.GDBusObjectManagerServer)(unsafe.Pointer(coreglib.InternObject(manager).Native()))
	if connection != nil {
		_arg1 = (*C.GDBusConnection)(unsafe.Pointer(coreglib.InternObject(connection).Native()))
	}

	C.g_dbus_object_manager_server_set_connection(_arg0, _arg1)
	runtime.KeepAlive(manager)
	runtime.KeepAlive(connection)
}

// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// NewSimpleIOStream creates a new IOStream wrapping input_stream and
// output_stream. See also OStream.
//
// The function takes the following parameters:
//
//    - inputStream: Stream.
//    - outputStream: Stream.
//
// The function returns the following values:
//
//    - simpleIOStream: new IOStream instance.
//
func NewSimpleIOStream(inputStream InputStreamer, outputStream OutputStreamer) *SimpleIOStream {
	var _arg1 *C.GInputStream  // out
	var _arg2 *C.GOutputStream // out
	var _cret *C.GIOStream     // in

	_arg1 = (*C.GInputStream)(unsafe.Pointer(inputStream.Native()))
	_arg2 = (*C.GOutputStream)(unsafe.Pointer(outputStream.Native()))

	_cret = C.g_simple_io_stream_new(_arg1, _arg2)
	runtime.KeepAlive(inputStream)
	runtime.KeepAlive(outputStream)

	var _simpleIOStream *SimpleIOStream // out

	_simpleIOStream = wrapSimpleIOStream(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _simpleIOStream
}

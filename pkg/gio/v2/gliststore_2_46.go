// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
)

// #include <stdlib.h>
// #include <gio/gio.h>
// extern gint _gotk4_glib2_CompareDataFunc(gconstpointer, gconstpointer, gpointer);
// extern gint _gotk4_gio2_CompareDataFunc(gconstpointer, gconstpointer, gpointer);
import "C"

// Sort the items in store according to compare_func.
//
// The function takes the following parameters:
//
//    - compareFunc: pairwise comparison function for sorting.
//
func (store *ListStore) Sort(compareFunc glib.CompareDataFunc) {
	var _arg0 *C.GListStore      // out
	var _arg1 C.GCompareDataFunc // out
	var _arg2 C.gpointer

	_arg0 = (*C.GListStore)(unsafe.Pointer(coreglib.InternObject(store).Native()))
	_arg1 = (*[0]byte)(C._gotk4_glib2_CompareDataFunc)
	_arg2 = C.gpointer(gbox.Assign(compareFunc))
	defer gbox.Delete(uintptr(_arg2))

	C.g_list_store_sort(_arg0, _arg1, _arg2)
	runtime.KeepAlive(store)
	runtime.KeepAlive(compareFunc)
}

// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gio/gio.h>
// #include <glib-object.h>
// extern void _gotk4_gio2_DBusObject_ConnectInterfaceRemoved(gpointer, GDBusInterface*, guintptr);
// extern void _gotk4_gio2_DBusObject_ConnectInterfaceAdded(gpointer, GDBusInterface*, guintptr);
// void _gotk4_gio2_DBusObject_virtual_interface_added(void* fnptr, GDBusObject* arg0, GDBusInterface* arg1) {
//   ((void (*)(GDBusObject*, GDBusInterface*))(fnptr))(arg0, arg1);
// };
// void _gotk4_gio2_DBusObject_virtual_interface_removed(void* fnptr, GDBusObject* arg0, GDBusInterface* arg1) {
//   ((void (*)(GDBusObject*, GDBusInterface*))(fnptr))(arg0, arg1);
// };
import "C"

// GType values.
var (
	GTypeDBusObject = coreglib.Type(C.g_dbus_object_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDBusObject, F: marshalDBusObject},
	})
}

// DBusObject type is the base type for D-Bus objects on both the service side
// (see BusObjectSkeleton) and the client side (see BusObjectProxy). It is
// essentially just a container of interfaces.
//
// DBusObject wraps an interface. This means the user can get the
// underlying type by calling Cast().
type DBusObject struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*DBusObject)(nil)
)

// DBusObjector describes DBusObject's interface methods.
type DBusObjector interface {
	coreglib.Objector

	// Interface gets the D-Bus interface with name interface_name associated
	// with object, if any.
	Interface(interfaceName string) *DBusInterface
	// Interfaces gets the D-Bus interfaces associated with object.
	Interfaces() []*DBusInterface
	// ObjectPath gets the object path for object.
	ObjectPath() string

	// Interface-added is emitted when interface is added to object.
	ConnectInterfaceAdded(func(iface DBusInterfacer)) coreglib.SignalHandle
	// Interface-removed is emitted when interface is removed from object.
	ConnectInterfaceRemoved(func(iface DBusInterfacer)) coreglib.SignalHandle
}

var _ DBusObjector = (*DBusObject)(nil)

func wrapDBusObject(obj *coreglib.Object) *DBusObject {
	return &DBusObject{
		Object: obj,
	}
}

func marshalDBusObject(p uintptr) (interface{}, error) {
	return wrapDBusObject(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ConnectInterfaceAdded is emitted when interface is added to object.
func (object *DBusObject) ConnectInterfaceAdded(f func(iface DBusInterfacer)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(object, "interface-added", false, unsafe.Pointer(C._gotk4_gio2_DBusObject_ConnectInterfaceAdded), f)
}

// ConnectInterfaceRemoved is emitted when interface is removed from object.
func (object *DBusObject) ConnectInterfaceRemoved(f func(iface DBusInterfacer)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(object, "interface-removed", false, unsafe.Pointer(C._gotk4_gio2_DBusObject_ConnectInterfaceRemoved), f)
}

// The function takes the following parameters:
//
func (object *DBusObject) interfaceAdded(interface_ DBusInterfacer) {
	gclass := (*C.GDBusObjectIface)(coreglib.PeekParentClass(object))
	fnarg := gclass.interface_added

	var _arg0 *C.GDBusObject    // out
	var _arg1 *C.GDBusInterface // out

	_arg0 = (*C.GDBusObject)(unsafe.Pointer(coreglib.InternObject(object).Native()))
	_arg1 = (*C.GDBusInterface)(unsafe.Pointer(coreglib.InternObject(interface_).Native()))

	C._gotk4_gio2_DBusObject_virtual_interface_added(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(object)
	runtime.KeepAlive(interface_)
}

// The function takes the following parameters:
//
func (object *DBusObject) interfaceRemoved(interface_ DBusInterfacer) {
	gclass := (*C.GDBusObjectIface)(coreglib.PeekParentClass(object))
	fnarg := gclass.interface_removed

	var _arg0 *C.GDBusObject    // out
	var _arg1 *C.GDBusInterface // out

	_arg0 = (*C.GDBusObject)(unsafe.Pointer(coreglib.InternObject(object).Native()))
	_arg1 = (*C.GDBusInterface)(unsafe.Pointer(coreglib.InternObject(interface_).Native()))

	C._gotk4_gio2_DBusObject_virtual_interface_removed(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(object)
	runtime.KeepAlive(interface_)
}

// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// IconDeserialize deserializes a #GIcon previously serialized using
// g_icon_serialize().
//
// The function takes the following parameters:
//
//   - value created with g_icon_serialize().
//
// The function returns the following values:
//
//   - icon (optional) or NULL when deserialization fails.
//
func IconDeserialize(value *glib.Variant) *Icon {
	var _arg1 *C.GVariant // out
	var _cret *C.GIcon    // in

	_arg1 = (*C.GVariant)(gextras.StructNative(unsafe.Pointer(value)))

	_cret = C.g_icon_deserialize(_arg1)
	runtime.KeepAlive(value)

	var _icon *Icon // out

	if _cret != nil {
		_icon = wrapIcon(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))
	}

	return _icon
}

// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// StaticResource is an opaque data structure and can only be accessed using the
// following functions.
//
// An instance of this type is always passed by reference.
type StaticResource struct {
	*staticResource
}

// staticResource is the struct that's finalized.
type staticResource struct {
	native *C.GStaticResource
}

// Fini: finalized a GResource initialized by g_static_resource_init().
//
// This is normally used by code generated by
// [glib-compile-resources][glib-compile-resources] and is not typically used by
// other code.
func (staticResource *StaticResource) Fini() {
	var _arg0 *C.GStaticResource // out

	_arg0 = (*C.GStaticResource)(gextras.StructNative(unsafe.Pointer(staticResource)))

	C.g_static_resource_fini(_arg0)
	runtime.KeepAlive(staticResource)
}

// Resource gets the GResource that was registered by a call to
// g_static_resource_init().
//
// This is normally used by code generated by
// [glib-compile-resources][glib-compile-resources] and is not typically used by
// other code.
//
// The function returns the following values:
//
//   - resource: #GResource.
//
func (staticResource *StaticResource) Resource() *Resource {
	var _arg0 *C.GStaticResource // out
	var _cret *C.GResource       // in

	_arg0 = (*C.GStaticResource)(gextras.StructNative(unsafe.Pointer(staticResource)))

	_cret = C.g_static_resource_get_resource(_arg0)
	runtime.KeepAlive(staticResource)

	var _resource *Resource // out

	_resource = (*Resource)(gextras.NewStructNative(unsafe.Pointer(_cret)))
	C.g_resource_ref(_cret)
	runtime.SetFinalizer(
		gextras.StructIntern(unsafe.Pointer(_resource)),
		func(intern *struct{ C unsafe.Pointer }) {
			C.g_resource_unref((*C.GResource)(intern.C))
		},
	)

	return _resource
}

// Init initializes a GResource from static data using a GStaticResource.
//
// This is normally used by code generated by
// [glib-compile-resources][glib-compile-resources] and is not typically used by
// other code.
func (staticResource *StaticResource) Init() {
	var _arg0 *C.GStaticResource // out

	_arg0 = (*C.GStaticResource)(gextras.StructNative(unsafe.Pointer(staticResource)))

	C.g_static_resource_init(_arg0)
	runtime.KeepAlive(staticResource)
}

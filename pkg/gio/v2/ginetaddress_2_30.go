// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// Equal checks if two Address instances are equal, e.g. the same address.
//
// The function takes the following parameters:
//
//    - otherAddress: another Address.
//
// The function returns the following values:
//
//    - ok: TRUE if address and other_address are equal, FALSE otherwise.
//
func (address *InetAddress) Equal(otherAddress *InetAddress) bool {
	var _arg0 *C.GInetAddress // out
	var _arg1 *C.GInetAddress // out
	var _cret C.gboolean      // in

	_arg0 = (*C.GInetAddress)(unsafe.Pointer(coreglib.InternObject(address).Native()))
	_arg1 = (*C.GInetAddress)(unsafe.Pointer(coreglib.InternObject(otherAddress).Native()))

	_cret = C.g_inet_address_equal(_arg0, _arg1)
	runtime.KeepAlive(address)
	runtime.KeepAlive(otherAddress)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

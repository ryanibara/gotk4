// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// DBusAddressEscapeValue: escape string so it can appear in a D-Bus address as
// the value part of a key-value pair.
//
// For instance, if string is /run/bus-for-:0, this function would return
// /run/bus-for-3A0, which could be used in a D-Bus address like
// unix:nonce-tcp:host=127.0.0.1,port=42,noncefile=/run/bus-for-3A0.
//
// The function takes the following parameters:
//
//    - str: unescaped string to be included in a D-Bus address as the value in a
//      key-value pair.
//
// The function returns the following values:
//
//    - utf8: copy of string with all non-optionally-escaped bytes escaped.
//
func DBusAddressEscapeValue(str string) string {
	var _arg1 *C.gchar // out
	var _cret *C.gchar // in

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(str)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.g_dbus_address_escape_value(_arg1)
	runtime.KeepAlive(str)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

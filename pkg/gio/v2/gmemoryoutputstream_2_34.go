// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
)

// #include <stdlib.h>
// #include <gio/gio.h>
import "C"

// StealAsBytes returns data from the ostream as a #GBytes. ostream must be
// closed before calling this function.
//
// The function returns the following values:
//
//    - bytes stream's data.
//
func (ostream *MemoryOutputStream) StealAsBytes() *glib.Bytes {
	var _arg0 *C.GMemoryOutputStream // out
	var _cret *C.GBytes              // in

	_arg0 = (*C.GMemoryOutputStream)(unsafe.Pointer(coreglib.InternObject(ostream).Native()))

	_cret = C.g_memory_output_stream_steal_as_bytes(_arg0)
	runtime.KeepAlive(ostream)

	var _bytes *glib.Bytes // out

	_bytes = (*glib.Bytes)(gextras.NewStructNative(unsafe.Pointer(_cret)))
	runtime.SetFinalizer(
		gextras.StructIntern(unsafe.Pointer(_bytes)),
		func(intern *struct{ C unsafe.Pointer }) {
			C.g_bytes_unref((*C.GBytes)(intern.C))
		},
	)

	return _bytes
}

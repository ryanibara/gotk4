// Code generated by girgen. DO NOT EDIT.

package gdkx11

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gdk/gdkx.h>
import "C"

// UserTime returns the timestamp of the last user interaction on display. The
// timestamp is taken from events caused by user interaction such as key presses
// or pointer movements. See gdk_x11_window_set_user_time().
//
// The function returns the following values:
//
//    - guint32: timestamp of the last user interaction.
//
func (display *X11Display) UserTime() uint32 {
	var _arg0 *C.GdkDisplay // out
	var _cret C.guint32     // in

	_arg0 = (*C.GdkDisplay)(unsafe.Pointer(coreglib.InternObject(display).Native()))

	_cret = C.gdk_x11_display_get_user_time(_arg0)
	runtime.KeepAlive(display)

	var _guint32 uint32 // out

	_guint32 = uint32(_cret)

	return _guint32
}

// SetCursorTheme sets the cursor theme from which the images for cursor should
// be taken.
//
// If the windowing system supports it, existing cursors created with
// gdk_cursor_new(), gdk_cursor_new_for_display() and gdk_cursor_new_from_name()
// are updated to reflect the theme change. Custom cursors constructed with
// gdk_cursor_new_from_pixbuf() will have to be handled by the application (GTK+
// applications can learn about cursor theme changes by listening for change
// notification for the corresponding Setting).
//
// The function takes the following parameters:
//
//    - theme (optional): name of the cursor theme to use, or NULL to unset a
//      previously set value.
//    - size: cursor size to use, or 0 to keep the previous size.
//
func (display *X11Display) SetCursorTheme(theme string, size int) {
	var _arg0 *C.GdkDisplay // out
	var _arg1 *C.gchar      // out
	var _arg2 C.gint        // out

	_arg0 = (*C.GdkDisplay)(unsafe.Pointer(coreglib.InternObject(display).Native()))
	if theme != "" {
		_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(theme)))
		defer C.free(unsafe.Pointer(_arg1))
	}
	_arg2 = C.gint(size)

	C.gdk_x11_display_set_cursor_theme(_arg0, _arg1, _arg2)
	runtime.KeepAlive(display)
	runtime.KeepAlive(theme)
	runtime.KeepAlive(size)
}

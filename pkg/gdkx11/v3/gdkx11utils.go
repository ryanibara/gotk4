// Code generated by girgen. DO NOT EDIT.

package gdkx11

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/cairo"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
import "C"

// X11GetParentRelativePattern: used with gdk_window_set_background_pattern() to
// inherit background from parent window. Useful for imitating transparency when
// compositing is not available. Otherwise behaves like a transparent pattern.
//
// Deprecated: Don't use this function.
//
// The function returns the following values:
//
func X11GetParentRelativePattern() *cairo.Pattern {
	var _cret *C.void // in

	_gret := girepository.MustFind("GdkX11", "x11_get_parent_relative_pattern").Invoke(nil, nil)
	_cret = *(**C.void)(unsafe.Pointer(&_gret))

	var _pattern *cairo.Pattern // out

	{
		_pp := &struct{ p unsafe.Pointer }{unsafe.Pointer(_cret)}
		_pattern = (*cairo.Pattern)(unsafe.Pointer(_pp))
	}
	runtime.SetFinalizer(_pattern, func(v *cairo.Pattern) {
		C.cairo_pattern_destroy((*C.void)(unsafe.Pointer(v.Native())))
	})

	return _pattern
}

// X11GrabServer: call gdk_x11_display_grab() on the default display. To ungrab
// the server again, use gdk_x11_ungrab_server().
//
// gdk_x11_grab_server()/gdk_x11_ungrab_server() calls can be nested.
func X11GrabServer() {
	girepository.MustFind("GdkX11", "x11_grab_server").Invoke(nil, nil)
}

// X11UngrabServer: ungrab the default display after it has been grabbed with
// gdk_x11_grab_server().
func X11UngrabServer() {
	girepository.MustFind("GdkX11", "x11_ungrab_server").Invoke(nil, nil)
}

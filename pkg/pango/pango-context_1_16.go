// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <pango/pango.h>
import "C"

// BaseGravity retrieves the base gravity for the context.
//
// See pango.Context.SetBaseGravity().
//
// The function returns the following values:
//
//    - gravity: base gravity for the context.
//
func (context *Context) BaseGravity() Gravity {
	var _arg0 *C.PangoContext // out
	var _cret C.PangoGravity  // in

	_arg0 = (*C.PangoContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.pango_context_get_base_gravity(_arg0)
	runtime.KeepAlive(context)

	var _gravity Gravity // out

	_gravity = Gravity(_cret)

	return _gravity
}

// Gravity retrieves the gravity for the context.
//
// This is similar to pango.Context.GetBaseGravity(), except for when the base
// gravity is PANGO_GRAVITY_AUTO for which pango.Gravity.GetForMatrix is used to
// return the gravity from the current context matrix.
//
// The function returns the following values:
//
//    - gravity: resolved gravity for the context.
//
func (context *Context) Gravity() Gravity {
	var _arg0 *C.PangoContext // out
	var _cret C.PangoGravity  // in

	_arg0 = (*C.PangoContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.pango_context_get_gravity(_arg0)
	runtime.KeepAlive(context)

	var _gravity Gravity // out

	_gravity = Gravity(_cret)

	return _gravity
}

// GravityHint retrieves the gravity hint for the context.
//
// See pango.Context.SetGravityHint() for details.
//
// The function returns the following values:
//
//    - gravityHint: gravity hint for the context.
//
func (context *Context) GravityHint() GravityHint {
	var _arg0 *C.PangoContext    // out
	var _cret C.PangoGravityHint // in

	_arg0 = (*C.PangoContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.pango_context_get_gravity_hint(_arg0)
	runtime.KeepAlive(context)

	var _gravityHint GravityHint // out

	_gravityHint = GravityHint(_cret)

	return _gravityHint
}

// SetBaseGravity sets the base gravity for the context.
//
// The base gravity is used in laying vertical text out.
//
// The function takes the following parameters:
//
//    - gravity: new base gravity.
//
func (context *Context) SetBaseGravity(gravity Gravity) {
	var _arg0 *C.PangoContext // out
	var _arg1 C.PangoGravity  // out

	_arg0 = (*C.PangoContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))
	_arg1 = C.PangoGravity(gravity)

	C.pango_context_set_base_gravity(_arg0, _arg1)
	runtime.KeepAlive(context)
	runtime.KeepAlive(gravity)
}

// SetGravityHint sets the gravity hint for the context.
//
// The gravity hint is used in laying vertical text out, and is only relevant if
// gravity of the context as returned by pango.Context.GetGravity() is set to
// PANGO_GRAVITY_EAST or PANGO_GRAVITY_WEST.
//
// The function takes the following parameters:
//
//    - hint: new gravity hint.
//
func (context *Context) SetGravityHint(hint GravityHint) {
	var _arg0 *C.PangoContext    // out
	var _arg1 C.PangoGravityHint // out

	_arg0 = (*C.PangoContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))
	_arg1 = C.PangoGravityHint(hint)

	C.pango_context_set_gravity_hint(_arg0, _arg1)
	runtime.KeepAlive(context)
	runtime.KeepAlive(hint)
}

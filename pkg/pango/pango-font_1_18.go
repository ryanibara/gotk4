// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <pango/pango.h>
// gboolean _gotk4_pango1_FontFace_virtual_is_synthesized(void* fnptr, PangoFontFace* arg0) {
//   return ((gboolean (*)(PangoFontFace*))(fnptr))(arg0);
// };
import "C"

// IsSynthesized returns whether a PangoFontFace is synthesized by the
// underlying font rendering engine from another face, perhaps by shearing,
// emboldening, or lightening it.
//
// The function returns the following values:
//
//    - ok: whether face is synthesized.
//
func (face *FontFace) IsSynthesized() bool {
	var _arg0 *C.PangoFontFace // out
	var _cret C.gboolean       // in

	_arg0 = (*C.PangoFontFace)(unsafe.Pointer(coreglib.InternObject(face).Native()))

	_cret = C.pango_font_face_is_synthesized(_arg0)
	runtime.KeepAlive(face)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// isSynthesized returns whether a PangoFontFace is synthesized by the
// underlying font rendering engine from another face, perhaps by shearing,
// emboldening, or lightening it.
//
// The function returns the following values:
//
//    - ok: whether face is synthesized.
//
func (face *FontFace) isSynthesized() bool {
	gclass := (*C.PangoFontFaceClass)(coreglib.PeekParentClass(face))
	fnarg := gclass.is_synthesized

	var _arg0 *C.PangoFontFace // out
	var _cret C.gboolean       // in

	_arg0 = (*C.PangoFontFace)(unsafe.Pointer(coreglib.InternObject(face).Native()))

	_cret = C._gotk4_pango1_FontFace_virtual_is_synthesized(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(face)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <pango/pango.h>
import "C"

// DescribeWithAbsoluteSize returns a description of the font, with absolute
// font size set in device units.
//
// Use pango.Font.Describe() if you want the font size in points.
//
// The function returns the following values:
//
//    - fontDescription: newly-allocated PangoFontDescription object.
//
func (font *Font) DescribeWithAbsoluteSize() *FontDescription {
	var _arg0 *C.PangoFont            // out
	var _cret *C.PangoFontDescription // in

	_arg0 = (*C.PangoFont)(unsafe.Pointer(coreglib.InternObject(font).Native()))

	_cret = C.pango_font_describe_with_absolute_size(_arg0)
	runtime.KeepAlive(font)

	var _fontDescription *FontDescription // out

	_fontDescription = (*FontDescription)(gextras.NewStructNative(unsafe.Pointer(_cret)))
	runtime.SetFinalizer(
		gextras.StructIntern(unsafe.Pointer(_fontDescription)),
		func(intern *struct{ C unsafe.Pointer }) {
			C.pango_font_description_free((*C.PangoFontDescription)(intern.C))
		},
	)

	return _fontDescription
}

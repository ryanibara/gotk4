// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
)

// #include <stdlib.h>
// #include <pango/pango.h>
import "C"

// GravityGetForScriptAndWidth returns the gravity to use in laying out a single
// character or PangoItem.
//
// The gravity is determined based on the script, East Asian width, base
// gravity, and hint,
//
// This function is similar to pango.Gravity.GetForScript except that this
// function makes a distinction between narrow/half-width and wide/full-width
// characters also. Wide/full-width characters always stand *upright*, that is,
// they always take the base gravity, whereas narrow/full-width characters are
// always rotated in vertical context.
//
// If base_gravity is PANGO_GRAVITY_AUTO, it is first replaced with the
// preferred gravity of script.
//
// The function takes the following parameters:
//
//    - script to query.
//    - wide: TRUE for wide characters as returned by g_unichar_iswide().
//    - baseGravity: base gravity of the paragraph.
//    - hint: orientation hint.
//
// The function returns the following values:
//
//    - gravity: resolved gravity suitable to use for a run of text with script
//      and wide.
//
func GravityGetForScriptAndWidth(script Script, wide bool, baseGravity Gravity, hint GravityHint) Gravity {
	var _arg1 C.PangoScript      // out
	var _arg2 C.gboolean         // out
	var _arg3 C.PangoGravity     // out
	var _arg4 C.PangoGravityHint // out
	var _cret C.PangoGravity     // in

	_arg1 = C.PangoScript(script)
	if wide {
		_arg2 = C.TRUE
	}
	_arg3 = C.PangoGravity(baseGravity)
	_arg4 = C.PangoGravityHint(hint)

	_cret = C.pango_gravity_get_for_script_and_width(_arg1, _arg2, _arg3, _arg4)
	runtime.KeepAlive(script)
	runtime.KeepAlive(wide)
	runtime.KeepAlive(baseGravity)
	runtime.KeepAlive(hint)

	var _gravity Gravity // out

	_gravity = Gravity(_cret)

	return _gravity
}

// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <pango/pango.h>
// guint _gotk4_pango1_FontMap_virtual_get_serial(void* fnptr, PangoFontMap* arg0) {
//   return ((guint (*)(PangoFontMap*))(fnptr))(arg0);
// };
import "C"

// Serial returns the current serial number of fontmap.
//
// The serial number is initialized to an small number larger than zero when a
// new fontmap is created and is increased whenever the fontmap is changed. It
// may wrap, but will never have the value 0. Since it can wrap, never compare
// it with "less than", always use "not equals".
//
// The fontmap can only be changed using backend-specific API, like changing
// fontmap resolution.
//
// This can be used to automatically detect changes to a PangoFontMap, like in
// PangoContext.
//
// The function returns the following values:
//
//    - guint: current serial number of fontmap.
//
func (fontmap *FontMap) Serial() uint {
	var _arg0 *C.PangoFontMap // out
	var _cret C.guint         // in

	_arg0 = (*C.PangoFontMap)(unsafe.Pointer(coreglib.InternObject(fontmap).Native()))

	_cret = C.pango_font_map_get_serial(_arg0)
	runtime.KeepAlive(fontmap)

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}

// Serial returns the current serial number of fontmap.
//
// The serial number is initialized to an small number larger than zero when a
// new fontmap is created and is increased whenever the fontmap is changed. It
// may wrap, but will never have the value 0. Since it can wrap, never compare
// it with "less than", always use "not equals".
//
// The fontmap can only be changed using backend-specific API, like changing
// fontmap resolution.
//
// This can be used to automatically detect changes to a PangoFontMap, like in
// PangoContext.
//
// The function returns the following values:
//
//    - guint: current serial number of fontmap.
//
func (fontmap *FontMap) serial() uint {
	gclass := (*C.PangoFontMapClass)(coreglib.PeekParentClass(fontmap))
	fnarg := gclass.get_serial

	var _arg0 *C.PangoFontMap // out
	var _cret C.guint         // in

	_arg0 = (*C.PangoFontMap)(unsafe.Pointer(coreglib.InternObject(fontmap).Native()))

	_cret = C._gotk4_pango1_FontMap_virtual_get_serial(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(fontmap)

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}

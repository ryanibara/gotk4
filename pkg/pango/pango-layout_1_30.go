// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <pango/pango.h>
import "C"

// CharacterCount returns the number of Unicode characters in the the text of
// layout.
//
// The function returns the following values:
//
//    - gint: number of Unicode characters in the text of layout.
//
func (layout *Layout) CharacterCount() int {
	var _arg0 *C.PangoLayout // out
	var _cret C.gint         // in

	_arg0 = (*C.PangoLayout)(unsafe.Pointer(coreglib.InternObject(layout).Native()))

	_cret = C.pango_layout_get_character_count(_arg0)
	runtime.KeepAlive(layout)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// LogAttrsReadonly retrieves an array of logical attributes for each character
// in the layout.
//
// This is a faster alternative to pango.Layout.GetLogAttrs(). The returned
// array is part of layout and must not be modified. Modifying the layout will
// invalidate the returned array.
//
// The number of attributes returned in n_attrs will be one more than the total
// number of characters in the layout, since there need to be attributes
// corresponding to both the position before the first character and the
// position after the last character.
//
// The function returns the following values:
//
//    - logAttrs: array of logical attributes.
//
func (layout *Layout) LogAttrsReadonly() []LogAttr {
	var _arg0 *C.PangoLayout  // out
	var _cret *C.PangoLogAttr // in
	var _arg1 C.gint          // in

	_arg0 = (*C.PangoLayout)(unsafe.Pointer(coreglib.InternObject(layout).Native()))

	_cret = C.pango_layout_get_log_attrs_readonly(_arg0, &_arg1)
	runtime.KeepAlive(layout)

	var _logAttrs []LogAttr // out

	{
		src := unsafe.Slice((*C.PangoLogAttr)(_cret), _arg1)
		_logAttrs = make([]LogAttr, _arg1)
		for i := 0; i < int(_arg1); i++ {
			_logAttrs[i] = *(*LogAttr)(gextras.NewStructNative(unsafe.Pointer((&src[i]))))
		}
	}

	return _logAttrs
}
